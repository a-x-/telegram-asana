{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Stores/TaskTrackerStore.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/TasksAsana/List.js","Components/ColumnRight/TasksAsana/NewTask.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Assets/Icons/SharedMedia.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/TaskTracker.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Assets/Icons/Document2.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","taskTrackerSettings","localStorage","JSON","parse","initialProjects","initialChats","mappingText","res","normMapping","split","line","projectId","tasksStore","parseMapping","asanaHeaders","Headers","pat","trimLeft","submitTask","data","params","headers","stringify","projects","fetch","json","errors","reset","loadProjects","loadUsers","users","r","item","gid","EventEmitter","HEADER_TABS","HeadTabs","withStyles","indicator","display","Tabs","HeadTab","minWidth","Tab","ChatDetailsHeader","backButton","onBackClick","onTabChange","TasksStore","info","isChannelChat","overflow","marginLeft","findIndex","tab","_","label","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","nextContext","openMedia","miniSrc","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","domain","punycode","ToUnicode","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","overScanCount","SharedMediaContent","items","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","renderIdsList","log","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","voice_note","fake","TasksList","onNewTaskToggle","useState","tasks","List","divider","wordWrap","Fab","Add","initialTask","name","assignee","due_on","notes","titles","NewTask","_users","submitStatus","setSubmitStatus","useMemo","fields","setFields","useTranslation","refs","useRef","FormControl","fullWidth","Box","TextField","getFieldProps","targetValue","marginBottom","autoOk","disablePast","format","startOfDay","days","weeks","startOfWeek","weekStartsOn","rows","multiline","undefined","CircularProgress","fontWeight","toString","field","inputVariant","inputRef","alert","formatISO","representation","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","headerTab","newTaskFormOpen","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","renderContent","CSSTransition","timeout","enter","enteringScreen","exit","leavingScreen","in","mountOnEnter","unmountOnExit","renderInfo","onScroll","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","indicatorColor","textColor","scrollable","scrollButtons","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","onChangeChatId","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","chatId_","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","getItem","setItem","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onTaskTracker","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","defaultValue","FilterChat","role","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","TaskTracker","initialSettings","patRef","mappingRef","setMapping","setPat","settings","useEffect","flexDirection","helperText","Link","href","rel","Autocomplete","getOptionLabel","renderInput","getOptionSelected","flexBasis","TaskTrackerStore","lineHeight","handleMuteFor","property","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","openTasktracker","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","isMetaBubble","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","Actions","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","isRightPanelOpen","withLanguage"],"mappings":"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","file":"static/js/4.86afa1cd.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","import EventEmitter from './EventEmitter';\n\nexport const TT = {\n  ASANA: 'ASANA',\n}\nconst taskTrackerSettings = localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings)\nexport const initialTasks = []\nexport const initialProjects = []\nexport const initialChats = parseMapping(taskTrackerSettings.mappingText)\nconst asanaHeaders = new Headers({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${taskTrackerSettings && taskTrackerSettings.pat || 'OPEN TELEGRAM SETTINS > TaskTracker'}`,\n})\n\n\nclass TaskTrackerStore extends EventEmitter {\n  constructor() {\n      super();\n      this.reset();\n      setTimeout(() => {\n        this.loadProjects();\n        this.loadUsers();\n      }, 1000); // low priority\n  }\n  reset() {\n    this.projects = initialProjects;\n    this.chats = initialChats;\n    this.users = [];\n  }\n  async loadProjects() {\n    const {data: projects} = await fetch('https://app.asana.com/api/1.0/projects', { headers: asanaHeaders }).then(r => r.json())\n    this.projects = projects.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n  async loadUsers() {\n    const {data: users} = await fetch('https://app.asana.com/api/1.0/users', { headers: asanaHeaders }).then(r => r.json())\n    this.users = users.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n\n  //\n  // == Public\n\n  /**\n   * @param projectId {number}\n   * @param data {object}\n   */\n  submitTask = async (projectId, data) => {\n    const params = { method: 'POST', headers: asanaHeaders, body: JSON.stringify({data: {...data, projects: [projectId]}}) };\n    const res = await fetch('https://app.asana.com/api/1.0/tasks', params).then(res => res.json());\n    if (res.errors) throw new Error(res.errors[0] && res.errors[0].message || 'Error');\n  }\n}\n\nfunction parseMapping (mappingText) {\n  const res = {};\n  normMapping(mappingText).trim().replace(/\\s*\\(.+?\\)/g, '').split('\\n').forEach(line => {\n    const [chatId, projectId] = line.trim().split(' ')\n    res[chatId] = {tasksStore: {projectId}};\n  })\n  return res;\n}\n\n\nexport function normMapping (mappingText) {\n  return mappingText.trimLeft().replace(/\\n{2,}/g, '\\n').replace(/ +/g, ' ');\n}\n\nconst store = new TaskTrackerStore();\nwindow.tasksStore = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\nimport { Tab, Tabs, withStyles } from '@material-ui/core';\n\nconst HEADER_TABS = ['info', 'tasks', 'webs', 'files']\n\nconst HeadTabs = withStyles({ indicator: { display: 'none' } })(Tabs)\nconst HeadTab = withStyles({ root: { minWidth: 0, color: 'grey' }, selected: { color: 'black'} })(Tab);\n\nclass ChatDetailsHeader extends React.Component {\n    render() {\n        const { chatId, t, backButton, onBackClick, onClose, onTabChange } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Person Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onBackClick}>\n                    <span className='header-status-content' style={{ overflow: 'visible' }}>\n                        <HeadTabs\n                            style={{ marginLeft: -12 }}\n                            value={ HEADER_TABS.findIndex(t => t === this.props.tab) }\n                            onChange={ (_, value) => onTabChange(HEADER_TABS[value]) }\n                        >\n                            <HeadTab label={info} className=\"chat-header-text\"/>\n                            { tasksStore && [\n                                <HeadTab key=\"tasks\" label=\"Tasks\"/>,\n                                <HeadTab key=\"webs\" label=\"Webs\" disabled/>,\n                                <HeadTab key=\"files\" label=\"Files\" disabled/>,\n                            ]}\n                        </HeadTabs>\n                    </span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div className='shared-media-tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            let { text, caption } = message.content;\n            text = text || caption;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(message) {\n        if (!message) return undefined;\n\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return undefined;\n            }\n            case 'messageVideo': {\n                return undefined;\n            }\n            case 'messageDocument': {\n                return 78;\n            }\n            case 'messageAudio': {\n                return 94;\n            }\n            case 'messageVoiceNote': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        } = this.state;\n\n        console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0;\n        if (!hasItems) {\n            return null;\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x)}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {Fab, List, ListItem, ListItemText} from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst fake = ['Отчёты', 'Баннеры', 'Техническиое', 'Юридическое'].map(title => ({id:title,title}))\n\nexport default function TasksList ({ onNewTaskToggle }) {\n  const [tasks, setTasks] = useState(fake)\n  return <div className=\"chat-tasks-list\">\n      <div className={classNames('chat', { 'chat-big': true })}>\n          <div className='chat-wrapper'>\n              <List className='chat-details-items'>\n                      {tasks.map(({id,title}) => (\n                          <ListItem key={id} divider className='list-item-rounded' alignItems='flex-start'>\n                              <ListItemText primary={title} style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                          </ListItem>\n                      ))}\n              </List>\n\n              <Fab className=\"chat-tasks-add\" aria-label=\"add\" color=\"primary\"\n                  onClick={onNewTaskToggle}\n              >\n                  <Add/>\n              </Fab>\n          </div>\n      </div>\n  </div>\n}\n","import React, { useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport TasksStore from '../../../Stores/TaskTrackerStore';\n\nimport { FormControl, IconButton, TextField, Box, Button, MenuItem, Chip, CircularProgress } from \"@material-ui/core\";\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { add, formatISO, startOfDay } from 'date-fns'\nimport { startOfWeek } from 'date-fns/esm';\n\nconst initialTask = {\n  name: '',\n  assignee: '',\n  due_on: new Date(),\n  notes: '',\n}\nconst titles = {\n  name: 'Task name',\n  assignee: 'Assignee',\n  due_on: 'Deadline',\n  notes: 'Description',\n}\n\nexport default function NewTask ({ chatId, onClose }) {\n    const [{ projects, chats, users: _users }] = useState(TasksStore);\n    const [submitStatus, setSubmitStatus] = useState(null);\n    const users = useMemo(() => [{id:'me', name: 'Me'}, ..._users], [_users]);\n    // const project = projects[projectId]\n    const [fields, setFields] = useState(initialTask)\n    const { t } = useTranslation();\n    const refs = useRef({})\n\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return null\n\n    return <div className='chat-tasks-new-form'>\n        <div className='header-master'>\n            <IconButton className='header-left-button' onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow'>\n                <span className='header-status-content'>{t('New task')}</span>\n            </div>\n        </div>\n\n        <div className='chat-tasks-new-form-controls'>\n            <FormControl fullWidth variant='outlined'>\n                <Box p={2}>\n                  <TextField {...getFieldProps('name')} autoFocus />\n                </Box>\n                <Box p={2}>\n                  <TextField select {...getFieldProps('assignee', {targetValue: true})} style={{ marginBottom: 8 }}>\n                    {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n                  </TextField>\n                  <Chip onClick={ () => setFields(fields => ({ ...fields, assignee: 'me' })) } label={t('Me')}/>\n                </Box>\n                <Box p={2}>\n                  <KeyboardDatePicker autoOk disablePast format=\"dd.MM.yyyy\" {...getFieldProps('due_on', {targetValue: null})} variant=\"inline\" style={{ marginBottom: 8 }} />\n\n                  <div style={{ display: 'flex' }}>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { days: 1 })) })) } label={t('Tomorrow')}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { weeks: 1 })) })) } label={t('In a Week')} style={{ marginLeft: 8 }}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: add(startOfWeek(new Date(), {weekStartsOn: 1}), { weeks: 1 }) })) } label={t('Monday')} style={{ marginLeft: 8 }}/>\n                  </div>\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('notes')} rows={16} multiline />\n                </Box>\n            </FormControl>\n\n            <Box p={2} style={{ display: 'flex', alignItems: 'center' }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={submitStatus === 'loading' ? undefined : handleSubmit} style={{ color: 'white' }}>\n                {submitStatus === 'loading' ? <CircularProgress size={24} style={{ color: 'white' }} /> : t('Create')}\n              </Button>\n              { submitStatus instanceof Error && <div style={{ marginLeft: 16, color: 'red', fontWeight: 500 }}>{ submitStatus.toString() }</div> }\n            </Box>\n        </div>\n    </div>\n\n  /**\n   * @returns {import('@material-ui/core').OutlinedTextFieldProps}\n   */\n  function getFieldProps(field, {targetValue = false} = {}) {\n    return {\n      variant: 'outlined',\n      // @ts-ignore\n      inputVariant: 'outlined',\n      fullWidth: true,\n      value: fields[field],\n      label: t(titles[field]),\n      inputRef: (ref) => refs.current[field] = ref,\n      onChange:\n        (targetValue === true && ((e) => setFields(fields => ({...fields, [field]: e.target.value })))) ||\n        // Тут какой-то сломаный MUI, в котором не работает e.target.value... Пиздец блядь\n        (targetValue === false && (() => setFields(fields => ({...fields, [field]: refs.current[field] && refs.current[field].value })))) ||\n        ((value) => setFields(fields => ({...fields, [field]: value })))\n\n    }\n  }\n\n  async function handleSubmit () {\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return alert('Не подтянулась инфа из асаны')\n    const {projectId} = chats[chatId].tasksStore\n\n    const due_on = formatISO(fields.due_on, { representation: 'date'});\n    try {\n      setSubmitStatus('loading')\n      await TasksStore.submitTask(projectId, {...fields, due_on})\n      setFields(initialTask)\n      setSubmitStatus(null)\n    } catch(e) {\n      setSubmitStatus(e)\n    }\n    // todo: close\n  }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport {duration, Typography, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport { CSSTransition } from 'react-transition-group';\nimport TasksList from './TasksAsana/List';\nimport NewTask from './TasksAsana/NewTask';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            headerTab: tasksStore ? 'tasks' : 'info',\n            newTaskFormOpen: false,\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n\n        if (!list) return {}\n\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     const { chatId, theme, counters, migratedCounters } = this.props;\n\n    //     if (nextProps.chatId !== chatId) return true;\n    //     if (nextProps.counters !== counters) return true;\n    //     if (nextProps.migratedCounters !== migratedCounters) return true;\n    //     if (nextProps.theme !== theme) return true;\n    //     if (nextState.headerTab !== this.state.headerTab) return true\n    //     if (nextState.newTaskFormOpen !== this.state.newTaskFormOpen) return true\n\n    //     return false;\n    // }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) this.loadContent();\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (list) list.scrollTop = prevProps.chatId === chatId ? scrollTop : 0;\n\n        if (prevProps.chatId !== this.props.chatId) {\n            const { chatId } = this.props;\n            const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n            this.setState({headerTab: tasksStore ? 'tasks' : 'info'});\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        if (!this.listRef.current) return;\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef.current) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef.current) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })}/>\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = this.renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup);\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n\n    renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return (\n            <>\n                <CSSTransition\n                    timeout={{ enter: duration.enteringScreen, exit: duration.leavingScreen }}\n                    in={this.state.newTaskFormOpen}\n                    mountOnEnter={true}\n                    unmountOnExit={true}>\n                        <div>\n                            {this.state.newTaskFormOpen && <NewTask chatId={ chatId } onClose={()=>this.setState({newTaskFormOpen: false})} /> }\n                        </div>\n                </CSSTransition>\n\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onBackClick={this.handleHeaderClick}\n                    tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })} />\n                {this.state.headerTab === 'info' && this.renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup)}\n                {this.state.headerTab === 'tasks' && <TasksList onNewTaskToggle={() => this.setState(({newTaskFormOpen}) => ({ newTaskFormOpen: !newTaskFormOpen}))} />}\n            </>\n        );\n    }\n\n    renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return <div\n            ref={this.listRef}\n            className={classNames('chat-details-list', 'scrollbars-hidden')}\n            onScroll={this.handleScroll}>\n            <div className='chat-details-info'>\n                <Chat\n                    chatId={chatId}\n                    big={true}\n                    showStatus={true}\n                    showSavedMessages={!popup}\n                    onTileSelect={photo ? this.handleOpenViewer : null} />\n                {!isMe && (\n                    <List className='chat-details-items'>\n                        {bio && (\n                            <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                <ListItemIcon>\n                                    <ErrorOutlineIcon className='chat-details-info-icon' />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={bio}\n                                    secondary={t('Bio')}\n                                    style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                            </ListItem>\n                        )}\n                        {username && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                <ListItemIcon>\n                                    <AlternateEmailIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={<Typography variant='inherit' noWrap>\n                                        {username}\n                                    </Typography>}\n                                    secondary={t('Username')} />\n                            </ListItem>\n                        )}\n                        {phoneNumber && (\n                            <>\n                                <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                    <ListItemIcon>\n                                        <CallIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={<Typography variant='inherit' noWrap>\n                                            {formatPhoneNumber(phoneNumber)}\n                                        </Typography>}\n                                        secondary={t('Phone')} />\n                                </ListItem>\n                            </>\n                        )}\n                        <NotificationsListItem chatId={chatId} />\n                        {popup && !isGroup && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    primary={<Typography color='primary' variant='inherit' noWrap>\n                                        {t('SendMessage').toUpperCase()}\n                                    </Typography>}\n                                    style={{ paddingLeft: 40 }} />\n                            </ListItem>\n                        )}\n                    </List>\n                )}\n            </div>\n\n            <div ref={this.dividerRef} />\n            <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\n            <SharedMediaContent ref={this.mediaRef} chatId={chatId} />\n        </div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n        const chatId_ = popup ? dialogChatId : chatId;\n\n        this.state = {\n            chatId: chatId_,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n        props.onChangeChatId(chatId_) // TODO: перенести этот стейт выше\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n        this.props.onChangeChatId(update.nextChatId)\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n            this.props.onChangeChatId(0)\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        if (!chatId) return null;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n        setTimeout(() => {\n            this.state.filters && this.state.filters[0] && this.state.filters[0].id && this.handleFilterClick(null, this.state.filters[0].id); // Select first folder\n        }, 300)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                    </div>))}\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport TaskTrackerIcon from '@material-ui/icons/Assignment';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onTaskTracker,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onTaskTracker}>\n                        <ListItemIcon>\n                            <TaskTrackerIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('TaskTracker')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n * TaskTracker extension settings panel\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './TaskTracker.css';\nimport { TextField, Link, Box, Typography, ListItem, List } from '@material-ui/core';\nimport ChatStore from '../../Stores/ChatStore';\nimport TaskTrackerStore, { normMapping } from '../../Stores/TaskTrackerStore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function TaskTracker ({ onClose }) {\n    const [initialSettings] = useState(() => localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings))\n    const {t} = useTranslation();\n    const patRef = useRef();\n    const mappingRef = useRef();\n    const [mappingText, setMapping] = useState(initialSettings && initialSettings.mappingText || '');\n    const [pat, setPat] = useState(initialSettings && initialSettings.pat || '');\n    const settings = useMemo(() => ({ pat, mappingText }), [pat, mappingText]);\n    useEffect(() => void (localStorage.taskTrackerSettings = JSON.stringify(settings)), [settings])\n\n    return (\n        <>\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>{t('Task Tracker')} (Asana)</span>\n                </div>\n            </div>\n            <div className='sidebar-page-content' style={{ display: 'flex', flexDirection: 'column' }}>\n                <Box p={2}>\n                    <TextField label=\"Asana Token (PAT)\" variant=\"outlined\" placeholder=\"X/XXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                        helperText={<Link href=\"https://app.asana.com/-/developer_console\" target=\"_blank\" rel=\"noopener\">Obtain PAT</Link>}\n                        fullWidth\n                        inputRef={patRef}\n                        value={pat}\n                        onChange={ () => patRef.current && setPat(patRef.current.value) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <div style={{ display: 'flex' }}>\n                        <Autocomplete options={[...ChatStore.items.entries()].map(([_, item]) => item).filter(item => !mappingText.includes(item.id))}\n                            getOptionLabel={item => item.title}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Chat')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text}\\n${value.id}(${value.title}) `))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%'}}\n                        />\n                        <Autocomplete options={[...TaskTrackerStore.projects.entries()].map(([_, item]) => item)}\n                            getOptionLabel={item => item.name}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Project')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text} ${value.id}(${value.name})\\n`))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%', marginLeft: 16 }}\n                        />\n                    </div>\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label=\"Mapping: Chat id <-> Project id\"\n                        placeholder={`chat_id project_id\\nchat_id project_id\\nchat_id project_id`}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap', fontSize: 12, lineHeight: 2 }}}\n                        inputRef={mappingRef}\n                        value={mappingText}\n                        onChange={ () => mappingRef.current && setMapping(normMapping(mappingRef.current.value)) }\n                    />\n                </Box>\n            </div>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport TaskTracker from '../TaskTracker';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false,\n            openTasktracker: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => this.setState({ openEditProfile: true });\n    closeEditProfile = () => this.setState({ openEditProfile: false });\n    openGeneral = () => this.setState({ openGeneral: true });\n    closeGeneral = () => this.setState({ openGeneral: false });\n    openNotifications = () => this.setState({ openNotifications: true });\n    closeNotifications = () => this.setState({ openNotifications: false });\n    openPrivacySecurity = () => this.setState({ openPrivacySecurity: true });\n    closePrivacySecurity = () => this.setState({ openPrivacySecurity: false });\n    openLanguage = () => this.setState({ openLanguage: true });\n    closeLanguage = () => this.setState({ openLanguage: false });\n    openFilters = () => this.setState({ openFilters: true })\n    closeFilters = () => this.setState({ openFilters: false });\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                    onTaskTracker={() => this.setState({ openTasktracker: true })}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n                <SidebarPage open={this.state.openTasktracker} onClose={() => this.setState({ openTasktracker: false })}>\n                    <TaskTracker />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator, isMeChat, isPrivateChat, isSupergroup } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return <LeaveChatDialog chatId={chatId} onClose={this.handleLeaveContinue} />\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return <ClearHistoryDialog chatId={chatId} onClose={this.handleClearHistoryContinue} />;\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n        const isRightPanelOpen = Boolean(ChatStore.get(this.state.chatId))\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isRightPanelOpen\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    <ChatInfo onChangeChatId={(chatId) => this.setState({ chatId })} />\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}