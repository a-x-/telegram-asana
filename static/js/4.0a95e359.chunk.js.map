{"version":3,"sources":["Stores/TaskTrackerStore.js","Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/TasksAsana/List.js","Components/ColumnRight/TasksAsana/NewTask.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Assets/Icons/SharedMedia.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/TaskTracker.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Assets/Icons/Document2.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["TT","ASANA","taskTrackerSettings","localStorage","JSON","parse","initialTasks","initialProjects","initialChats","parseMapping","mappingText","asanaHeaders","Headers","pat","_getTaskPlaces","getTaskPlaceScript","TaskTrackerStore","getTasks","projectId","a","console","error","fetch","headers","then","r","json","tasks","data","map","item","id","gid","submitTask","params","method","body","stringify","projects","res","errors","Error","message","emit","getTaskPlaces","getFullTasks","fields","join","Promise","all","t","fullTasks","getSections","reset","setTimeout","loadProjects","loadUsers","this","chats","users","EventEmitter","normMapping","trim","replace","split","forEach","line","chatId","tasksStore","trimLeft","settings","result","placeScript","eval","e","Array","isArray","store","window","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","props","setState","emojis","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","getStore","loadChatContent","onUpdateChatTitle","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","navigator","clipboard","writeText","copyOld","successful","createElement","contentEditable","readOnly","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","catch","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","HEADER_TABS","HeadTabs","withStyles","indicator","display","Tabs","HeadTab","minWidth","Tab","ChatDetailsHeader","backButton","onBackClick","onTabChange","TasksStore","info","isChannelChat","overflow","marginLeft","findIndex","tab","_","label","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","nextContext","openMedia","miniSrc","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","domain","punycode","ToUnicode","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","overScanCount","SharedMediaContent","items","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","renderIdsList","log","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","voice_note","TasksList","onNewTaskToggle","useState","sessionStorage","setTasks","status","setStatus","refreshToken","setRefreshToken","useEffect","overflowY","List","CircularProgress","right","name","permalink_url","divider","Link","underline","href","rel","wordWrap","Fab","Add","initialTask","assignee","due_on","notes","titles","NewTask","_users","submitStatus","setSubmitStatus","useMemo","getInitialFields","setFields","useTranslation","refs","useRef","taskPlaces","setTaskPlaces","superTask","superTaskId","persistFields","useCallback","_fields","formatISO","representation","places","alert","FormControl","fullWidth","Box","parent","opacity","border","boxShadow","TextField","getFieldProps","targetValue","marginBottom","autoOk","disablePast","format","startOfDay","days","weeks","startOfWeek","weekStartsOn","rows","multiline","undefined","fontWeight","toString","field","inputVariant","inputRef","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","getTasksStore","headerTab","newTaskFormOpen","Object","values","some","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","renderContent","CSSTransition","timeout","enter","enteringScreen","exit","leavingScreen","in","mountOnEnter","unmountOnExit","renderInfo","onScroll","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","indicatorColor","textColor","scrollable","scrollButtons","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","onChangeChatId","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","chatId_","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","chatList","authorization_state","chat_filters","onClientUpdate","addTdLibListener","removeTdLibListener","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","getItem","setItem","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onTaskTracker","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","defaultValue","FilterChat","role","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","placeScriptGuideText","TaskTracker","initialSettings","patRef","mappingRef","placeScriptRef","setMapping","setPat","setPlaceScript","flexDirection","helperText","Autocomplete","getOptionLabel","renderInput","getOptionSelected","flexBasis","lineHeight","handleMuteFor","property","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","openTasktracker","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","isMetaBubble","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","Actions","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","isRightPanelOpen","withLanguage"],"mappings":"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","file":"static/js/4.0a95e359.chunk.js","sourcesContent":["import EventEmitter from './EventEmitter';\nimport {memoize} from 'lodash'; // Note: uses 1th arg as string only!\n\nexport const TT = {\n  ASANA: 'ASANA',\n}\nconst taskTrackerSettings = localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings)\nexport const initialTasks = []\nexport const initialProjects = []\nexport const initialChats = taskTrackerSettings ? parseMapping(taskTrackerSettings.mappingText) : {}\nconst asanaHeaders = new Headers({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${taskTrackerSettings && taskTrackerSettings.pat || 'OPEN TELEGRAM SETTINS > TaskTracker'}`,\n})\nconst _getTaskPlaces = getTaskPlaceScript(taskTrackerSettings)\n\n\nclass TaskTrackerStore extends EventEmitter {\n  constructor() {\n      super();\n      this.reset();\n      setTimeout(() => {\n        this.loadProjects();\n        this.loadUsers();\n      }, 1000); // low priority\n  }\n  reset() {\n    this.projects = initialProjects;\n    this.chats = initialChats;\n    this.users = [];\n  }\n  async loadProjects() {\n    const {data: projects} = await fetch('https://app.asana.com/api/1.0/projects', { headers: asanaHeaders }).then(r => r.json())\n    this.projects = projects.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n  async loadUsers() {\n    const {data: users} = await fetch('https://app.asana.com/api/1.0/users', { headers: asanaHeaders }).then(r => r.json())\n    this.users = users.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n\n  //\n  // == Public\n\n  getTasks = async (projectId) => {\n    if (!projectId) {\n      console.error('getTasks: projectId is unset')\n      return []\n    }\n    const {data: tasks} = await fetch(`https://app.asana.com/api/1.0/tasks?project=${projectId}`, { headers: asanaHeaders }).then(r => r.json())\n    return tasks.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n  /**\n   * @param projectId {number}\n   * @param data {object}\n   */\n  submitTask = async (projectId, data) => {\n    const params = { method: 'POST', headers: asanaHeaders, body: JSON.stringify({data: {...data, projects: [projectId]}}) };\n    const res = await fetch('https://app.asana.com/api/1.0/tasks', params).then(res => res.json());\n    if (res.errors) throw new Error(res.errors[0] && res.errors[0].message || 'Error');\n    this.emit('taskCreated', res)\n  }\n\n  getTaskPlaces = ({tasks}) => _getTaskPlaces({tasks})\n\n  getFullTasks = async (projectId) => {\n    const tasks = await this.getTasks(projectId);\n    const fields = ['notes', 'name', 'permalink_url', 'gid', 'assignee', 'completed', 'section'].join(',');\n    const fullTasks = await Promise.all(tasks.map(t => fetch(`https://app.asana.com/api/1.0/tasks/${ t.id }?opt_fields=${fields}`, { headers: asanaHeaders }).then(res => res.json())))\n    return fullTasks.map(({data: item}) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n\n  getSections = async (projectId) => {\n    const {data: tasks} = await fetch(`https://app.asana.com/api/1.0/tasks?project=${projectId}`, { headers: asanaHeaders }).then(r => r.json())\n    return tasks.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n\n  }\n}\n\nfunction parseMapping (mappingText) {\n  const res = {};\n  normMapping(mappingText).trim().replace(/\\s*\\(.+?\\)/g, '').split('\\n').forEach(line => {\n    const [chatId, projectId] = line.trim().split(' ')\n    res[chatId] = {tasksStore: {projectId}};\n  })\n  return res;\n}\n\n\nexport function normMapping (mappingText) {\n  return mappingText.trimLeft().replace(/\\n{2,}/g, '\\n').replace(/ +/g, ' ');\n}\n\nfunction getTaskPlaceScript (settings) {\n  let result = []\n  try {\n    result = settings && settings.placeScript && eval(settings.placeScript)\n  } catch (e) {\n    console.error('Task Place Compute Script отработал с ошибкой')\n  }\n  if (typeof result === 'function') return result;\n  if (Array.isArray(result)) return () => result;\n  return undefined;\n}\n\nconst store = new TaskTrackerStore();\nwindow.tasksStore = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\nimport { Tab, Tabs, withStyles } from '@material-ui/core';\n\nconst HEADER_TABS = ['info', 'tasks', 'webs', 'files']\n\nconst HeadTabs = withStyles({ indicator: { display: 'none' } })(Tabs)\nconst HeadTab = withStyles({ root: { minWidth: 0, color: 'grey' }, selected: { color: 'black'} })(Tab);\n\nclass ChatDetailsHeader extends React.Component {\n    render() {\n        const { chatId, t, backButton, onBackClick, onClose, onTabChange } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Person Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onBackClick}>\n                    <span className='header-status-content' style={{ overflow: 'visible' }}>\n                        <HeadTabs\n                            style={{ marginLeft: -12 }}\n                            value={ HEADER_TABS.findIndex(t => t === this.props.tab) }\n                            onChange={ (_, value) => onTabChange(HEADER_TABS[value]) }\n                        >\n                            <HeadTab label={info} className=\"chat-header-text\"/>\n                            { tasksStore && [\n                                <HeadTab key=\"tasks\" label=\"Tasks\"/>,\n                                <HeadTab key=\"webs\" label=\"Webs\" disabled/>,\n                                <HeadTab key=\"files\" label=\"Files\" disabled/>,\n                            ]}\n                        </HeadTabs>\n                    </span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div className='shared-media-tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            let { text, caption } = message.content;\n            text = text || caption;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(message) {\n        if (!message) return undefined;\n\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return undefined;\n            }\n            case 'messageVideo': {\n                return undefined;\n            }\n            case 'messageDocument': {\n                return 78;\n            }\n            case 'messageAudio': {\n                return 94;\n            }\n            case 'messageVoiceNote': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        } = this.state;\n\n        console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0;\n        if (!hasItems) {\n            return null;\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x)}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\n\nimport {CircularProgress, Fab, Link, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport CheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport UncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { Add } from '@material-ui/icons';\n\nexport default function TasksList ({ chatId, onNewTaskToggle }) {\n  const [{ chats, getFullTasks }] = useState(TaskTrackerStore);\n  const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n  const [tasks, setTasks] = useState(() => sessionStorage[`taskTrackerTasks_${projectId}`] && JSON.parse(sessionStorage[`taskTrackerTasks_${projectId}`]) || [])\n  const [status, setStatus] = useState(null)\n  const [refreshToken, setRefreshToken] = useState(null)\n\n  useEffect(() => {\n    setStatus('loading')\n    getFullTasks(projectId).then(tasks => (setTasks(tasks), setStatus(null), sessionStorage[`taskTrackerTasks_${projectId}`] = JSON.stringify(tasks)), setStatus)\n  }, [projectId, refreshToken])\n\n  useEffect(() => void TaskTrackerStore.on('taskCreated', () => setRefreshToken(Date.now())), [])\n\n  return <div className=\"chat-tasks-list\" style={{ overflowY: 'auto' }}>\n      <div className={classNames('chat', { 'chat-big': true })}>\n          <div className='chat-wrapper'>\n              <List className='chat-details-items'>\n                {status === 'loading' && <CircularProgress style={{ right: 30, position: 'absolute' }} size={24} /> }\n                {tasks.map(({id,name,permalink_url,completed}) => (\n                    <ListItem key={id} divider className='list-item-compact' alignItems='flex-start'>\n                        <ListItemIcon>{completed ? <CheckedIcon color=\"disabled\"/> : <UncheckedIcon color=\"disabled\"/> }</ListItemIcon>\n                        <ListItemText\n                          primary={<Link color=\"inherit\" underline=\"none\" href={ permalink_url } target=\"_blank\" rel=\"noopener noreferrer\">{name}</Link>}\n                          style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                        />\n                    </ListItem>\n                ))}\n              </List>\n\n              <Fab className=\"chat-tasks-add\" aria-label=\"add\" color=\"primary\"\n                  onClick={onNewTaskToggle}\n              >\n                  <Add/>\n              </Fab>\n          </div>\n      </div>\n  </div>\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\n\nimport { FormControl, IconButton, TextField, Box, Button, MenuItem, Chip, CircularProgress, Typography, Link } from \"@material-ui/core\";\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { add, formatISO, startOfDay } from 'date-fns'\nimport { startOfWeek } from 'date-fns/esm';\nimport { debounce } from '../../../Utils/Common';\n\nconst initialTask = {\n  name: '',\n  assignee: '',\n  due_on: null,\n  notes: '',\n}\nconst titles = {\n  name: 'Task name',\n  assignee: 'Assignee',\n  due_on: 'Deadline',\n  notes: 'Description',\n}\n\nexport default function NewTask ({ chatId, onClose }) {\n    const [{ projects, chats, users: _users, getTaskPlaces, getTasks }] = useState(TaskTrackerStore);\n    const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n    const [submitStatus, setSubmitStatus] = useState(null);\n    const users = useMemo(() => [{id:'me', name: 'Me'}, ..._users], [_users]);\n    const [fields, setFields] = useState(() => getInitialFields(projectId))\n    const { t } = useTranslation();\n    const refs = useRef({})\n    const [taskPlaces, setTaskPlaces] = useState(null)\n    const [tasks, setTasks] = useState([])\n    const superTask = useMemo(() => taskPlaces && taskPlaces[0] && tasks.find(t => t.id === taskPlaces[0].superTaskId), [taskPlaces, tasks])\n    const persistFields = useCallback(debounce((_fields) => void setTimeout(() => {\n      const fields = { ..._fields, due_on: _fields.due_on && formatISO(_fields.due_on, { representation: 'date'})}\n      console.log('save fields', fields, 'to', projectId)\n      localStorage[`taskTrackerIncomplete_${projectId}`] = JSON.stringify(fields)\n    }),600), [])\n\n    useEffect(() => {\n      if (!projectId) return\n      getTasks(projectId).then(tasks => {\n        setTasks(tasks)\n        const places = getTaskPlaces({tasks})\n        if (Array.isArray(places)) setTaskPlaces(places)\n        else alert(`${t('Task Place Compute Script')} must return array`)\n      })\n    }, [projectId]);\n    useEffect(() => void persistFields(fields), [fields])\n\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return null\n\n    return <div className='chat-tasks-new-form'>\n        <div className='header-master'>\n            <IconButton className='header-left-button' onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow'>\n                <span className='header-status-content'>{t('New task')}</span>\n            </div>\n        </div>\n\n        <div className='chat-tasks-new-form-controls'>\n            <FormControl fullWidth variant='outlined'>\n                <Box p={2}>\n                  {!taskPlaces && (\n                    <Typography variant='caption' style={{ color: 'grey'}}><i>Loading task place...</i></Typography>\n                  ) ||\n                  taskPlaces.length <= 1 && (\n                    <Typography variant='caption' style={{ color: 'grey'}}>\n                      {\n                        superTask\n                          ? <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}/${superTask.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {superTask.name} ❯\n                          </Link>\n                          : <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {t('Project root')} ❯\n                          </Link>\n                      }\n                    </Typography>\n                  ) ||\n                  (\n                    <select onChange={e=> setFields({ parent: e.target.value})} value={fields.parent || ''} style={{ opacity: .6, border: 'none', width: '100%', boxShadow: '0 8px 0 -1px white, 0 9px 0 -1px grey'}}>\n                      <option value=\"\">Project root</option>\n                      {taskPlaces.map(p => {\n                        const name = tasks.find(t => t.id === p.superTaskId).name\n                        return <option key={p.id} value={p.superTaskId}>{name}</option>\n                      })}\n                    </select>\n                  )}\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('name')} autoFocus />\n                </Box>\n                <Box p={2}>\n                  <TextField select {...getFieldProps('assignee', {targetValue: true})} style={{ marginBottom: 8 }}>\n                    {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n                  </TextField>\n                  <Chip onClick={ () => setFields(fields => ({ ...fields, assignee: 'me' })) } label={t('Me')}/>\n                </Box>\n                <Box p={2}>\n                  <KeyboardDatePicker autoOk disablePast format=\"dd.MM.yyyy\"\n                    style={{ marginBottom: 8 }}\n                    {...getFieldProps('due_on', {targetValue: null})}\n                    variant=\"inline\"\n                  />\n\n                  <div style={{ display: 'flex' }}>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { days: 1 })) })) } label={t('Tomorrow')}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { weeks: 1 })) })) } label={t('In a Week')} style={{ marginLeft: 8 }}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: add(startOfWeek(new Date(), {weekStartsOn: 1}), { weeks: 1 }) })) } label={t('Monday')} style={{ marginLeft: 8 }}/>\n                  </div>\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('notes')} rows={16} multiline />\n                </Box>\n            </FormControl>\n\n            <Box p={2} style={{ display: 'flex', alignItems: 'center' }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={submitStatus === 'loading' ? undefined : handleSubmit} style={{ color: 'white' }}>\n                {submitStatus === 'loading' ? <CircularProgress size={24} style={{ color: 'white' }} /> : t('Create')}\n              </Button>\n              { submitStatus instanceof Error && <div style={{ marginLeft: 16, color: 'red', fontWeight: 500 }}>{ submitStatus.toString() }</div> }\n            </Box>\n        </div>\n    </div>\n\n  /**\n   * @returns {import('@material-ui/core').OutlinedTextFieldProps}\n   */\n  function getFieldProps(field, {targetValue = false} = {}) {\n    return {\n      variant: 'outlined',\n      // @ts-ignore\n      inputVariant: 'outlined',\n      fullWidth: true,\n      value: fields[field],\n      label: t(titles[field]),\n      inputRef: (ref) => refs.current[field] = ref,\n      onChange:\n        (targetValue === true && ((e) => setFields(fields => ({...fields, [field]: e.target.value })))) ||\n        // Тут какой-то сломаный MUI, в котором не работает e.target.value... Пиздец блядь\n        (targetValue === false && (() => setFields(fields => ({...fields, [field]: refs.current[field] && refs.current[field].value })))) ||\n        ((value) => setFields(fields => ({...fields, [field]: value })))\n\n    }\n  }\n\n  async function handleSubmit () {\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return alert('Не подтянулась инфа из асаны')\n    const {projectId} = chats[chatId].tasksStore\n\n    const due_on = fields.due_on && formatISO(fields.due_on, { representation: 'date'});\n    try {\n      setSubmitStatus('loading')\n      await TaskTrackerStore.submitTask(projectId, {...fields, due_on, parent: superTask && superTask.id})\n      setFields(initialTask)\n      setSubmitStatus(null)\n      setTimeout(() => delete localStorage[`taskTrackerIncomplete_${projectId}`])\n    } catch(e) {\n      setSubmitStatus(e)\n    }\n    // todo: close\n  }\n}\n\nfunction getInitialFields(projectId) {\n  if (localStorage[`taskTrackerIncomplete_${projectId}`]) {\n    const res = JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])\n    return {...res, due_on: res.due_on && new Date(res.due_on)}\n  } else {\n    return initialTask\n  }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport {duration, Typography, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport { CSSTransition } from 'react-transition-group';\nimport TasksList from './TasksAsana/List';\nimport NewTask from './TasksAsana/NewTask';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n        const tasksStore = this.getTasksStore()\n        const projectId = tasksStore && tasksStore.projectId\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            headerTab: tasksStore ? 'tasks' : 'info',\n            newTaskFormOpen: Boolean(localStorage[`taskTrackerIncomplete_${projectId}`]) && Object.values(JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])).some(Boolean),\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n\n        if (!list) return {}\n\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     const { chatId, theme, counters, migratedCounters } = this.props;\n\n    //     if (nextProps.chatId !== chatId) return true;\n    //     if (nextProps.counters !== counters) return true;\n    //     if (nextProps.migratedCounters !== migratedCounters) return true;\n    //     if (nextProps.theme !== theme) return true;\n    //     if (nextState.headerTab !== this.state.headerTab) return true\n    //     if (nextState.newTaskFormOpen !== this.state.newTaskFormOpen) return true\n\n    //     return false;\n    // }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) this.loadContent();\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (list) list.scrollTop = prevProps.chatId === chatId ? scrollTop : 0;\n\n        if (prevProps.chatId !== this.props.chatId) {\n            const tasksStore = this.getTasksStore()\n            const projectId = tasksStore && tasksStore.projectId\n            this.setState({\n                headerTab: tasksStore ? 'tasks' : 'info',\n                newTaskFormOpen: Boolean(localStorage[`taskTrackerIncomplete_${projectId}`]) && Object.values(JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])).some(Boolean),\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        if (!this.listRef.current) return;\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef.current) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    getTasksStore () {\n        const { chatId } = this.props;\n        return chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n    }\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef.current) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })}/>\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = this.renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup);\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n\n    renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return (\n            <>\n                <CSSTransition\n                    timeout={{ enter: duration.enteringScreen, exit: duration.leavingScreen }}\n                    in={this.state.newTaskFormOpen}\n                    mountOnEnter={true}\n                    unmountOnExit={true}>\n                        <div>\n                            {this.state.newTaskFormOpen && <NewTask chatId={ chatId } onClose={()=>this.setState({newTaskFormOpen: false})} /> }\n                        </div>\n                </CSSTransition>\n\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onBackClick={this.handleHeaderClick}\n                    tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })} />\n                {this.state.headerTab === 'info' && this.renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup)}\n                {this.state.headerTab === 'tasks' && <TasksList chatId={chatId} onNewTaskToggle={() => this.setState(({newTaskFormOpen}) => ({ newTaskFormOpen: !newTaskFormOpen}))} />}\n            </>\n        );\n    }\n\n    renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return <div\n            ref={this.listRef}\n            className={classNames('chat-details-list', 'scrollbars-hidden')}\n            onScroll={this.handleScroll}>\n            <div className='chat-details-info'>\n                <Chat\n                    chatId={chatId}\n                    big={true}\n                    showStatus={true}\n                    showSavedMessages={!popup}\n                    onTileSelect={photo ? this.handleOpenViewer : null} />\n                {!isMe && (\n                    <List className='chat-details-items'>\n                        {bio && (\n                            <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                <ListItemIcon>\n                                    <ErrorOutlineIcon className='chat-details-info-icon' />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={bio}\n                                    secondary={t('Bio')}\n                                    style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                            </ListItem>\n                        )}\n                        {username && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                <ListItemIcon>\n                                    <AlternateEmailIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={<Typography variant='inherit' noWrap>\n                                        {username}\n                                    </Typography>}\n                                    secondary={t('Username')} />\n                            </ListItem>\n                        )}\n                        {phoneNumber && (\n                            <>\n                                <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                    <ListItemIcon>\n                                        <CallIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={<Typography variant='inherit' noWrap>\n                                            {formatPhoneNumber(phoneNumber)}\n                                        </Typography>}\n                                        secondary={t('Phone')} />\n                                </ListItem>\n                            </>\n                        )}\n                        <NotificationsListItem chatId={chatId} />\n                        {popup && !isGroup && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    primary={<Typography color='primary' variant='inherit' noWrap>\n                                        {t('SendMessage').toUpperCase()}\n                                    </Typography>}\n                                    style={{ paddingLeft: 40 }} />\n                            </ListItem>\n                        )}\n                    </List>\n                )}\n            </div>\n\n            <div ref={this.dividerRef} />\n            <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\n            <SharedMediaContent ref={this.mediaRef} chatId={chatId} />\n        </div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n        const chatId_ = popup ? dialogChatId : chatId;\n\n        this.state = {\n            chatId: chatId_,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n        props.onChangeChatId(chatId_) // TODO: перенести этот стейт выше\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n        this.props.onChangeChatId(update.nextChatId)\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n            this.props.onChangeChatId(0)\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        if (!chatId) return null;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n        setTimeout(() => {\n            this.state.filters && this.state.filters[0] && this.state.filters[0].id && this.handleFilterClick(null, this.state.filters[0].id); // Select first folder\n        }, 300)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                    </div>))}\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport TaskTrackerIcon from '@material-ui/icons/Assignment';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onTaskTracker,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onTaskTracker}>\n                        <ListItemIcon>\n                            <TaskTrackerIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('TaskTracker')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n * TaskTracker extension settings panel\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './TaskTracker.css';\nimport { TextField, Link, Box, Typography, ListItem, List } from '@material-ui/core';\nimport ChatStore from '../../Stores/ChatStore';\nimport TaskTrackerStore, { normMapping } from '../../Stores/TaskTrackerStore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst placeScriptGuideText = `\n// Task Place Compute Script\n// Examples. Choose one and customize it!\n\n// find single Placeholder task by name\n({tasks}) => {\n  const superTaskId = tasks.find(t => t.name === 'Placeholder task').gid\n  return [{superTaskId, sectionId: null}]\n}\n\n// find single Section\n({sections}) => {\n  const sectionId = tasks.find(t => t.name === 'Hot tasks section').gid\n  return [{superTaskId: null, sectionId}]\n}\n\n// static task or section id\n[{sectionId: '4646463535'}]\n\n// several place options\n[{superTaskId: '4646463535'}, {superTaskId: '6646463599'}]\n`;\n\nexport default function TaskTracker ({ onClose }) {\n    const [initialSettings] = useState(() => localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings))\n    const {t} = useTranslation();\n    const patRef = useRef();\n    const mappingRef = useRef();\n    const placeScriptRef = useRef();\n    const [mappingText, setMapping] = useState(initialSettings && initialSettings.mappingText || '');\n    const [pat, setPat] = useState(initialSettings && initialSettings.pat || '');\n    const [placeScript, setPlaceScript] = useState(initialSettings && initialSettings.placeScript || placeScriptGuideText);\n    const settings = useMemo(() => ({ pat, mappingText, placeScript }), [pat, mappingText, placeScript]);\n    useEffect(() => void (localStorage.taskTrackerSettings = JSON.stringify(settings)), [settings])\n\n    return (\n        <>\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>{t('Task Tracker')} (Asana)</span>\n                </div>\n            </div>\n            <div className='sidebar-page-content' style={{ display: 'flex', flexDirection: 'column' }}>\n                <Box p={2}>\n                    <TextField label=\"Asana Token (PAT)\" variant=\"outlined\" placeholder=\"X/XXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                        helperText={<Link href=\"https://app.asana.com/-/developer_console\" target=\"_blank\" rel=\"noopener\">Obtain PAT</Link>}\n                        fullWidth\n                        inputRef={patRef}\n                        value={pat}\n                        onChange={ () => patRef.current && setPat(patRef.current.value) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <div style={{ display: 'flex' }}>\n                        <Autocomplete options={[...ChatStore.items.entries()].map(([_, item]) => item).filter(item => !mappingText.includes(item.id))}\n                            getOptionLabel={item => item.title}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Chat')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text}\\n${value.id}(${value.title}) `))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%'}}\n                        />\n                        <Autocomplete options={[...TaskTrackerStore.projects.entries()].map(([_, item]) => item)}\n                            getOptionLabel={item => item.name}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Project')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text} ${value.id}(${value.name})\\n`))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%', marginLeft: 16 }}\n                        />\n                    </div>\n\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label=\"Mapping: Chat id <-> Project id\"\n                        placeholder={`chat_id project_id\\nchat_id project_id\\nchat_id project_id`}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap', fontSize: 12, lineHeight: 2 }}}\n                        inputRef={mappingRef}\n                        value={mappingText}\n                        onChange={ () => mappingRef.current && setMapping(normMapping(mappingRef.current.value)) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label={t('Task Place Compute Script')}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap' }}}\n                        inputRef={placeScriptRef}\n                        value={placeScript}\n                        onChange={ () => placeScriptRef.current && setPlaceScript(normMapping(placeScriptRef.current.value)) }\n                    />\n                </Box>\n            </div>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport TaskTracker from '../TaskTracker';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false,\n            openTasktracker: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => this.setState({ openEditProfile: true });\n    closeEditProfile = () => this.setState({ openEditProfile: false });\n    openGeneral = () => this.setState({ openGeneral: true });\n    closeGeneral = () => this.setState({ openGeneral: false });\n    openNotifications = () => this.setState({ openNotifications: true });\n    closeNotifications = () => this.setState({ openNotifications: false });\n    openPrivacySecurity = () => this.setState({ openPrivacySecurity: true });\n    closePrivacySecurity = () => this.setState({ openPrivacySecurity: false });\n    openLanguage = () => this.setState({ openLanguage: true });\n    closeLanguage = () => this.setState({ openLanguage: false });\n    openFilters = () => this.setState({ openFilters: true })\n    closeFilters = () => this.setState({ openFilters: false });\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                    onTaskTracker={() => this.setState({ openTasktracker: true })}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n                <SidebarPage open={this.state.openTasktracker} onClose={() => this.setState({ openTasktracker: false })}>\n                    <TaskTracker />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator, isMeChat, isPrivateChat, isSupergroup } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return <LeaveChatDialog chatId={chatId} onClose={this.handleLeaveContinue} />\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return <ClearHistoryDialog chatId={chatId} onClose={this.handleClearHistoryContinue} />;\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n        const isRightPanelOpen = Boolean(ChatStore.get(this.state.chatId))\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isRightPanelOpen\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    <ChatInfo onChangeChatId={(chatId) => this.setState({ chatId })} />\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}