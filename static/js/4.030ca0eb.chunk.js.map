{"version":3,"sources":["Stores/TaskTrackerStore.js","Utils/Api.js","Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/TasksAsana/TaskCard.js","Utils/Hooks.js","Components/ColumnRight/TasksAsana/List.js","Components/ColumnRight/TasksAsana/NewTask.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Assets/Icons/SharedMedia.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/TaskTracker.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Assets/Icons/Document2.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["initialTasks","initialProjects","initialChats","taskTrackerSettings","parseMapping","mappingText","TT","ASANA","_getTaskPlaces","getTaskPlaceScript","TaskTrackerStore","getTasks","projectId","a","console","error","fetch","headers","asanaHeaders","then","r","json","tasks","data","errors","Error","message","withIds","getTasksBySection","sectionId","fields","url","join","submitTask","params","method","body","JSON","stringify","projects","res","emit","getTaskPlaces","getSectionsWithTasks","allTasks","taskFields","Promise","getSections","section","awaitAndEnchance","id","forEach","t","map","all","sections","reset","setTimeout","loadProjects","loadUsers","this","chats","users","EventEmitter","items","item","gid","promise","mapper","resolve","reject","settings","result","placeScript","eval","e","Array","isArray","store","window","tasksStore","localStorage","parse","Headers","pat","normMapping","trim","replace","split","line","chatId","trimLeft","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","props","setState","emojis","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","getStore","loadChatContent","onUpdateChatTitle","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","navigator","clipboard","writeText","copyOld","successful","createElement","contentEditable","readOnly","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","catch","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","HEADER_TABS","HeadTabs","withStyles","indicator","display","Tabs","HeadTab","minWidth","Tab","ChatDetailsHeader","backButton","onBackClick","onTabChange","TasksStore","info","isChannelChat","overflow","marginLeft","findIndex","tab","_","label","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","nextContext","openMedia","miniSrc","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","domain","punycode","ToUnicode","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","overScanCount","SharedMediaContent","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","renderIdsList","log","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","voice_note","TaskCard","fn","ms","deps","onSendChange","onCompleteToggle","useState","notes","setDescription","assignee","setAssignee","due_on","due","setDue","sendDescrChange","useCallback","useEffect","flexGrow","cursor","name","TextField","FormControl","justifyContent","autoOk","format","sendDueChange","Input","multiline","fullWidth","rows","Link","underline","rel","transform","href","permalink_url","TasksList","onNewTaskToggle","sessionStorage","sectionsState","setSectionsState","status","setStatus","refreshToken","setRefreshToken","currentTaskId","setCurrentTaskId","currentTask","useMemo","useTranslation","sectionsState_","CircularProgress","right","closedTasks","marginTop","renderItems","marginBottom","Box","Fab","Add","sendChange","handleTaskCompleteToggle","List","paddingTop","divider","handleItemClick","wordWrap","next","merge","field","initialTask","titles","NewTask","submitStatus","setSubmitStatus","getInitialFields","setFields","refs","useRef","taskPlaces","setTaskPlaces","setTasks","superTask","superTaskId","persistFields","_fields","formatISO","representation","places","alert","parent","opacity","border","boxShadow","getFieldProps","targetValue","disablePast","startOfDay","days","weeks","startOfWeek","weekStartsOn","undefined","fontWeight","toString","inputVariant","inputRef","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","getTasksStore","headerTab","newTaskFormOpen","checkShouldTaskFormOpen","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","renderContent","CSSTransition","timeout","enter","enteringScreen","exit","leavingScreen","in","mountOnEnter","unmountOnExit","renderInfo","onScroll","toUpperCase","paddingLeft","Object","entries","isToday","some","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","indicatorColor","textColor","scrollable","scrollButtons","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","onChangeChatId","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","chatId_","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","chatList","authorization_state","chat_filters","onClientUpdate","addTdLibListener","removeTdLibListener","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","getItem","setItem","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","getCache","save","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onTaskTracker","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","defaultValue","FilterChat","role","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","placeScriptGuideText","TaskTracker","initialSettings","patRef","mappingRef","placeScriptRef","setMapping","setPat","setPlaceScript","flexDirection","helperText","Autocomplete","getOptionLabel","renderInput","getOptionSelected","flexBasis","lineHeight","handleMuteFor","property","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","openTasktracker","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","isMetaBubble","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","Actions","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","isRightPanelOpen","withLanguage"],"mappings":"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","file":"static/js/4.030ca0eb.chunk.js","sourcesContent":["import EventEmitter from './EventEmitter';\nimport {memoize} from 'lodash'; // Note: uses 1th arg as string only!\nimport { taskTrackerSettings, parseMapping, asanaHeaders } from '../Utils/Api';\nexport const initialTasks = []\nexport const initialProjects = []\nexport const initialChats = taskTrackerSettings ? parseMapping(taskTrackerSettings.mappingText) : {}\n\nexport const TT = {\n  ASANA: 'ASANA',\n}\nconst _getTaskPlaces = getTaskPlaceScript(taskTrackerSettings)\n\n\nclass TaskTrackerStore extends EventEmitter {\n  constructor() {\n      super();\n      this.reset();\n      setTimeout(() => {\n        this.loadProjects();\n        this.loadUsers();\n      }, 1000); // low priority\n  }\n  reset() {\n    this.projects = initialProjects;\n    this.chats = initialChats;\n    this.users = [];\n  }\n  async loadProjects() {\n    const {data: projects, errors} = await fetch('https://app.asana.com/api/1.0/projects', { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    this.projects = withIds(projects)\n  }\n  async loadUsers() {\n    const {data: users, errors} = await fetch('https://app.asana.com/api/1.0/users', { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    this.users = withIds(users)\n  }\n\n  //\n  // == Public\n\n  getTasks = async (projectId) => {\n    if (!projectId) {\n      console.error('getTasks: projectId is unset')\n      return []\n    }\n    const {data: tasks, errors} = await fetch(`https://app.asana.com/api/1.0/projects/${projectId}/tasks`, { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    return withIds(tasks)\n  }\n  getTasksBySection = async (sectionId, fields) => {\n    if (!sectionId) {\n      console.error('getTasksBySection: sectionId is unset')\n      return []\n    }\n    const url = `https://app.asana.com/api/1.0/sections/${sectionId}/tasks${fields ? `?opt_expand=${fields.join(',')}` : ''}`\n    const {data: tasks, errors} = await fetch(url, { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    return withIds(tasks)\n  }\n  /**\n   * @param projectId {number}\n   * @param data {object}\n   */\n  submitTask = async (projectId, data) => {\n    const params = { method: 'POST', headers: asanaHeaders, body: JSON.stringify({data: {...data, projects: [projectId]}}) };\n    const res = await fetch('https://app.asana.com/api/1.0/tasks', params).then(res => res.json());\n    if (res.errors) throw new Error(res.errors[0] && res.errors[0].message || 'Error');\n    this.emit('taskCreated', res)\n  }\n\n  getTaskPlaces = ({tasks}) => _getTaskPlaces({tasks})\n\n  getSectionsWithTasks = async (projectId) => {\n    const allTasks = {}\n    const taskFields = ['notes', 'name', 'permalink_url', 'gid', 'assignee.name', 'completed', 'section', 'due_on'];\n    const sections = await Promise.all((await this.getSections(projectId))\n      .map(section => awaitAndEnchance(\n        this.getTasksBySection(section.id, taskFields),\n        tasks => {\n          tasks.forEach(t => allTasks[t.id] = t)\n          return {tasks: tasks.map(t => t.id), ...section}\n        }\n      ))\n    );\n    return {sections, all: { tasks: allTasks }}; // Array<{id, name, tasks: Task[]}>\n  }\n\n  getSections = async (projectId) => {\n    const {data: tasks, errors} = await fetch(`https://app.asana.com/api/1.0/projects/${projectId}/sections`, { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    return withIds(tasks)\n  }\n}\n\nfunction withIds (items) {\n  return items.map((item) => ({...item, id: item.gid}));\n}\n\nfunction awaitAndEnchance (promise, mapper) {\n  return new Promise((resolve, reject) => {\n    promise.then((res) => resolve(mapper(res)), reject);\n  })\n}\n\nfunction getTaskPlaceScript (settings) {\n  let result = []\n  try {\n    result = settings && settings.placeScript && eval(settings.placeScript)\n  } catch (e) {\n    console.error('Task Place Compute Script отработал с ошибкой')\n  }\n  if (typeof result === 'function') return result;\n  if (Array.isArray(result)) return () => result;\n  return undefined;\n}\n\nconst store = new TaskTrackerStore();\nwindow.tasksStore = store;\nexport default store;\n","export const taskTrackerSettings = localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings)\n\nexport const asanaHeaders = new Headers({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${taskTrackerSettings && taskTrackerSettings.pat || 'OPEN TELEGRAM SETTINS > TaskTracker'}`,\n})\n\nexport function parseMapping (mappingText) {\n  const res = {};\n  normMapping(mappingText).trim().replace(/\\s*\\(.+?\\)/g, '').split('\\n').forEach(line => {\n    const [chatId, projectId] = line.trim().split(' ')\n    res[chatId] = {tasksStore: {projectId}};\n  })\n  return res;\n}\n\n\nexport function normMapping (mappingText) {\n  return mappingText.trimLeft().replace(/\\n{2,}/g, '\\n').replace(/ +/g, ' ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\nimport { Tab, Tabs, withStyles } from '@material-ui/core';\n\nconst HEADER_TABS = ['info', 'tasks', 'webs', 'files']\n\nconst HeadTabs = withStyles({ indicator: { display: 'none' } })(Tabs)\nconst HeadTab = withStyles({ root: { minWidth: 0, color: 'grey' }, selected: { color: 'black'} })(Tab);\n\nclass ChatDetailsHeader extends React.Component {\n    render() {\n        const { chatId, t, backButton, onBackClick, onClose, onTabChange } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Person Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onBackClick}>\n                    <span className='header-status-content' style={{ overflow: 'visible' }}>\n                        <HeadTabs\n                            style={{ marginLeft: -12 }}\n                            value={ HEADER_TABS.findIndex(t => t === this.props.tab) }\n                            onChange={ (_, value) => onTabChange(HEADER_TABS[value]) }\n                        >\n                            <HeadTab label={info} className=\"chat-header-text\"/>\n                            { tasksStore && [\n                                <HeadTab key=\"tasks\" label=\"Tasks\"/>,\n                                <HeadTab key=\"webs\" label=\"Webs\" disabled/>,\n                                <HeadTab key=\"files\" label=\"Files\" disabled/>,\n                            ]}\n                        </HeadTabs>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div className='shared-media-tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            let { text, caption } = message.content;\n            text = text || caption;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(message) {\n        if (!message) return undefined;\n\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return undefined;\n            }\n            case 'messageVideo': {\n                return undefined;\n            }\n            case 'messageDocument': {\n                return 78;\n            }\n            case 'messageAudio': {\n                return 94;\n            }\n            case 'messageVoiceNote': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        } = this.state;\n\n        console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0;\n        if (!hasItems) {\n            return null;\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x)}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","import React, { useEffect, useState } from 'react';\n\nimport { FormControl, Input, InputLabel, Link, MenuItem, Select, TextField, Typography } from '@material-ui/core';\nimport CheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport UncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport LeftIcon from '@material-ui/icons/ArrowBackIosOutlined';\nimport OpenIcon from '@material-ui/icons/CallMadeOutlined';\n\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\nimport './TaskCard.css';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { useCallbackDebounce } from '../../../Utils/Hooks';\nimport { asanaHeaders } from '../../../Utils/Api';\n\nexport default function TaskCard ({data, onClose, onSendChange, onCompleteToggle}) {\n  const [{ users }] = useState(TaskTrackerStore);\n  const [description, setDescription] = useState(data.notes);\n  const [assignee, setAssignee] = useState(data.assignee && data.assignee.gid);\n  const [due, setDue] = useState(data.due_on);\n  const sendDescrChange = useCallbackDebounce(_sendDescrChange, 2000, []);\n\n  useEffect(() => setAssignee(data.assignee && data.assignee.gid), [data.assignee && data.assignee.gid]);\n  useEffect(() => setDue(data.due_on), [data.due_on]);\n\n  return <div className=\"tasks-card\">\n    <div style={{ display: 'flex' }}>\n      <div style={{ flexGrow: 1 }}>\n        <Typography variant=\"h6\" className=\"tasks-card-title\">\n          <span style={{ cursor: 'pointer'}} onClick={ onCompleteToggle }>\n            {data.completed ? <CheckedIcon color=\"inherit\" className=\"task-card-icon\"/> : <UncheckedIcon color=\"inherit\" className=\"task-card-icon\"/>}\n          </span>\n          <span style={{ marginLeft: '.5em' }}>{data.name}</span>\n        </Typography>\n\n        <Typography variant=\"subtitle1\" style={{ display: 'flex', alignItems: 'center' }}>\n          { renderAssignInput() }\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          { renderDueInput() }\n        </Typography>\n\n        <div className=\"task-card-description\">\n          { renderDescriptionInput() }\n        </div>\n      </div>\n\n      <div className=\"tasks-card-aside\">\n        <Link underline=\"none\" target=\"_blank\" rel=\"noopener noreferrer\" onClick={onClose}><LeftIcon color=\"inherit\" style={{ transform: 'rotate(-90deg)'}} /></Link>\n        <Link underline=\"none\" target=\"_blank\" rel=\"noopener noreferrer\" href={data.permalink_url}><OpenIcon color=\"inherit\" /></Link>\n      </div>\n    </div>\n  </div>\n\n  function renderAssignInput () {\n    return <TextField select value={ assignee } style={{ width: 140 }} onChange={ e => sendAssigneeChange(e.target.value)} label=\"Assignee\">\n      <MenuItem value=\"me\"><i>Me</i></MenuItem>\n      {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n      <MenuItem value=\"\"><i>Nobody</i></MenuItem>\n    </TextField>\n  }\n  function renderDueInput () {\n    return <FormControl style={{ height: 48, justifyContent: 'flex-end'}}>\n      <KeyboardDatePicker autoOk format=\"dd.MM.yyyy\" placeholder=\"DD.MM.YYYY\" variant=\"inline\" style={{ width: 140 }}\n        value={ due || null }\n        onChange={ value => sendDueChange(value)}\n      />\n    </FormControl>\n  }\n\n  function renderDescriptionInput () {\n    return <Input multiline fullWidth placeholder=\"Write task details\" rows={22}\n      value={ description || '' }\n      onChange={ (e) => {setDescription(e.target.value); sendDescrChange(e.target.value)} }\n    />\n  }\n\n  function _sendDescrChange (text) { onSendChange(data.id, 'notes', text); }\n  function sendAssigneeChange (value) { setAssignee(value); onSendChange(data.id, 'assignee', value || null); }\n  function sendDueChange (value) { setDue(value); onSendChange(data.id, 'due_on', value); }\n}\n","import { useCallback } from \"react\";\nimport { debounce } from \"./Common\";\n\nexport function useCallbackDebounce (fn, ms, deps) {\n  return useCallback(debounce(fn, ms), deps);\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\nimport {merge} from 'lodash';\n\nimport {Box, CircularProgress, Fab, Grow, Link, List, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core';\nimport CheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport UncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { Add as AddIcon } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport './List.css';\nimport TaskCard from './TaskCard';\nimport { asanaHeaders } from '../../../Utils/Api';\n\nexport default function TasksList ({ chatId, onNewTaskToggle }) {\n  const [{ chats, getSectionsWithTasks }] = useState(TaskTrackerStore);\n  const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n  const [sectionsState, setSectionsState] = useState(() => getCache())\n  const [status, setStatus] = useState(null)\n  const [refreshToken, setRefreshToken] = useState(null)\n  const [currentTaskId, setCurrentTaskId] = useState(null)\n  const currentTask = useMemo(() => currentTaskId && sectionsState[projectId] && sectionsState[projectId].all && sectionsState[projectId].all.tasks[currentTaskId], [currentTaskId, sectionsState, projectId])\n  const {t} = useTranslation();\n\n  useEffect(() => {\n    if (!projectId) return\n    setStatus('loading')\n\n    getSectionsWithTasks(projectId)\n      .then(({sections, all: {tasks}}) => {\n        setStatus(null);\n        const sectionsState_ = {...sectionsState, [projectId]: {sections, all: { tasks }}};\n        setSectionsState(sectionsState_);\n        sessionStorage[`Tasktracker_sectionsState`] = JSON.stringify(sectionsState_)\n      })\n      .catch(setStatus)\n  }, [projectId, refreshToken])\n\n  useEffect(() => void TaskTrackerStore.on('taskCreated', () => setRefreshToken(Date.now())), [])\n\n  return <div className=\"chat-tasks-list\">\n      <div className={classNames('chat', 'chat-tasks-list-wrap', { 'chat-big': true, 'chat-tasks-list-wrap__short': currentTask })}>\n          <div className='chat-wrapper'>\n              <div className='chat-details-items-wrap'>\n                {status === 'loading' && <CircularProgress style={{ right: 30, position: 'absolute' }} size={24} /> }\n                {sectionsState[projectId] && sectionsState[projectId].sections\n                  ? sectionsState[projectId].sections.map((section) => {\n                    const tasks = section.tasks.map(id => sectionsState[projectId].all.tasks[id]).filter(Boolean)\n                    const closedTasks = tasks.filter(t => t.completed)\n                    return <section key={section.id || section.name}>\n                      { section.name && section.name !== '(no section)' && (\n                        <Typography variant='h6' style={{ marginLeft: 16, color: 'grey', marginTop: 16 }}>{ section.name.toLowerCase() }</Typography>\n                      )}\n                      {renderItems(tasks.filter(t => !t.completed))}\n                      {Boolean(closedTasks.length) && <details style={{ marginBottom: 16 }}>\n                        <summary style={{ color: 'silver' }}>{closedTasks.length} {t('closed tasks')}</summary>\n                        {renderItems(closedTasks)}\n                      </details>}\n                    </section>\n                  })\n                  : <Box p={2}><i style={{ color: status instanceof Error ? 'darkred' : 'grey' }}>\n                    {status === 'loading'\n                      ? 'Just a sec'\n                      : status instanceof Error\n                      ? 'I tried, but I cannot show anything :('\n                      : 'No tasks yet, let`s get started!'\n                    }</i></Box>\n                }\n              </div>\n\n              <Fab className=\"chat-tasks-add\" aria-label=\"add\" color=\"primary\"\n                onClick={onNewTaskToggle}\n              >\n                <AddIcon/>\n              </Fab>\n          </div>\n      </div>\n\n      {/* Grow does not work */}\n      { currentTask\n        ? <TaskCard data={ currentTask } onClose={ () => setCurrentTaskId(null) } onSendChange={sendChange} onCompleteToggle={ () => handleTaskCompleteToggle(currentTask.id) } />\n        : <div style={{ flexGrow: 1 }}/>\n      }\n  </div>\n\n  function renderItems(tasks) {\n    return <List className='chat-details-items' style={{ paddingTop: 0 }}>\n      { tasks.map(({id,name,permalink_url,completed}) => (\n          <ListItem key={id} divider className='list-item-compact' alignItems='flex-start'>\n              <ListItemIcon style={{ cursor: 'pointer'}} onClick={ () => handleTaskCompleteToggle(id) }>{completed ? <CheckedIcon color=\"disabled\"/> : <UncheckedIcon color=\"disabled\"/> }</ListItemIcon>\n              <ListItemText\n                onClick={ (e) => handleItemClick(e, id) }\n                primary={<>{name}</>}\n                style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word', cursor: 'pointer'}}\n              />\n          </ListItem>\n      ))}\n    </List>\n  }\n\n  function handleItemClick (e, id) {\n    if (e.metaKey || e.ctrlKey) return\n    e.preventDefault()\n    e.stopPropagation()\n    setCurrentTaskId(id);\n  }\n\n  function handleTaskCompleteToggle (id) {\n    const next = !sectionsState[projectId].all.tasks[id].completed\n    sendChange(id, 'completed', next)\n    setSectionsState(state => merge({}, state, {[projectId]: { all: { tasks: { [id]: { completed: next }}}}}))\n  }\n}\n\nfunction sendChange (id, field, value) {\n  const body = JSON.stringify({ data: { [field]: value } });\n  fetch(`https://app.asana.com/api/1.0/tasks/${ id }`, { headers: asanaHeaders, method: 'PUT', body })\n}\n\nfunction getCache() {\n  return sessionStorage[`Tasktracker_sectionsState`] && JSON.parse(sessionStorage[`Tasktracker_sectionsState`]) || {}\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\n\nimport { FormControl, IconButton, TextField, Box, Button, MenuItem, Chip, CircularProgress, Typography, Link } from \"@material-ui/core\";\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { add, formatISO, startOfDay } from 'date-fns'\nimport { startOfWeek } from 'date-fns/esm';\nimport { debounce } from '../../../Utils/Common';\n\nconst initialTask = {\n  name: '',\n  assignee: '',\n  due_on: null,\n  notes: '',\n}\nconst titles = {\n  name: 'Task name',\n  assignee: 'Assignee',\n  due_on: 'Deadline',\n  notes: 'Description',\n}\n\nexport default function NewTask ({ chatId, onClose }) {\n    const [{ projects, chats, users, getTaskPlaces, getTasks }] = useState(TaskTrackerStore);\n    const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n    const [submitStatus, setSubmitStatus] = useState(null);\n    const [fields, setFields] = useState(() => getInitialFields(projectId))\n    const { t } = useTranslation();\n    const refs = useRef({})\n    const [taskPlaces, setTaskPlaces] = useState(null)\n    const [tasks, setTasks] = useState([])\n    const superTask = useMemo(() => taskPlaces && taskPlaces[0] && tasks.find(t => t.id === taskPlaces[0].superTaskId), [taskPlaces, tasks])\n    const persistFields = useCallback(debounce((_fields) => void setTimeout(() => {\n      const fields = { ..._fields, due_on: _fields.due_on && formatISO(_fields.due_on, { representation: 'date'})}\n      console.log('save fields', fields, 'to', projectId)\n      localStorage[`taskTrackerIncomplete_${projectId}`] = JSON.stringify(fields)\n    }),600), [])\n\n    useEffect(() => {\n      if (!projectId) return\n      getTasks(projectId).then(tasks => {\n        setTasks(tasks)\n        const places = getTaskPlaces({tasks})\n        if (Array.isArray(places)) setTaskPlaces(places)\n        else alert(`${t('Task Place Compute Script')} must return array`)\n      })\n    }, [projectId]);\n    useEffect(() => void persistFields(fields), [fields])\n\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return null\n\n    return <div className='chat-tasks-new-form'>\n        <div className='header-master'>\n            <IconButton className='header-left-button' onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow'>\n                <span className='header-status-content'>{t('New task')}</span>\n            </div>\n        </div>\n\n        <div className='chat-tasks-new-form-controls'>\n            <FormControl fullWidth variant='outlined'>\n                <Box p={2}>\n                  {!taskPlaces && (\n                    <Typography variant='caption' style={{ color: 'grey'}}><i>Loading task place...</i></Typography>\n                  ) ||\n                  taskPlaces.length <= 1 && (\n                    <Typography variant='caption' style={{ color: 'grey'}}>\n                      {\n                        superTask\n                          ? <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}/${superTask.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {superTask.name} ❯\n                          </Link>\n                          : <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {t('Project root')} ❯\n                          </Link>\n                      }\n                    </Typography>\n                  ) ||\n                  (\n                    <select onChange={e=> setFields({ parent: e.target.value})} value={fields.parent || ''} style={{ opacity: .6, border: 'none', width: '100%', boxShadow: '0 8px 0 -1px white, 0 9px 0 -1px grey'}}>\n                      <option value=\"\">Project root</option>\n                      {taskPlaces.map(p => {\n                        const name = tasks.find(t => t.id === p.superTaskId).name\n                        return <option key={p.id} value={p.superTaskId}>{name}</option>\n                      })}\n                    </select>\n                  )}\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('name')} autoFocus />\n                </Box>\n                <Box p={2}>\n                  <TextField select {...getFieldProps('assignee', {targetValue: true})} style={{ marginBottom: 8 }}>\n                    <MenuItem value=\"me\"><i>Me</i></MenuItem>\n                    {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n                    <MenuItem value=\"\"><i>Nobody</i></MenuItem>\n                  </TextField>\n                  <Chip onClick={ () => setFields(fields => ({ ...fields, assignee: 'me' })) } label={t('Me')}/>\n                </Box>\n                <Box p={2}>\n                  <KeyboardDatePicker autoOk disablePast format=\"dd.MM.yyyy\"\n                    style={{ marginBottom: 8 }}\n                    {...getFieldProps('due_on', {targetValue: null})}\n                    variant=\"inline\"\n                  />\n\n                  <div style={{ display: 'flex' }}>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { days: 1 })) })) } label={t('Tomorrow')}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { weeks: 1 })) })) } label={t('In a Week')} style={{ marginLeft: 8 }}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: add(startOfWeek(new Date(), {weekStartsOn: 1}), { weeks: 1 }) })) } label={t('Monday')} style={{ marginLeft: 8 }}/>\n                  </div>\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('notes')} rows={16} multiline />\n                </Box>\n            </FormControl>\n\n            <Box p={2} style={{ display: 'flex', alignItems: 'center' }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={submitStatus === 'loading' ? undefined : handleSubmit} style={{ color: 'white' }}>\n                {submitStatus === 'loading' ? <CircularProgress size={24} style={{ color: 'white' }} /> : t('Create')}\n              </Button>\n              { submitStatus instanceof Error && <div style={{ marginLeft: 16, color: 'red', fontWeight: 500 }}>{ submitStatus.toString() }</div> }\n            </Box>\n        </div>\n    </div>\n\n  /**\n   * @returns {import('@material-ui/core').OutlinedTextFieldProps}\n   */\n  function getFieldProps(field, {targetValue = false} = {}) {\n    return {\n      variant: 'outlined',\n      // @ts-ignore\n      inputVariant: 'outlined',\n      fullWidth: true,\n      value: fields[field],\n      label: t(titles[field]),\n      inputRef: (ref) => refs.current[field] = ref,\n      onChange:\n        (targetValue === true && ((e) => setFields(fields => ({...fields, [field]: e.target.value })))) ||\n        // Тут какой-то сломаный MUI, в котором не работает e.target.value... Пиздец блядь\n        (targetValue === false && (() => setFields(fields => ({...fields, [field]: refs.current[field] && refs.current[field].value })))) ||\n        ((value) => setFields(fields => ({...fields, [field]: value })))\n\n    }\n  }\n\n  async function handleSubmit () {\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return alert('Не подтянулась инфа из асаны')\n    const {projectId} = chats[chatId].tasksStore\n\n    const due_on = fields.due_on && formatISO(fields.due_on, { representation: 'date'});\n    try {\n      setSubmitStatus('loading')\n      await TaskTrackerStore.submitTask(projectId, {...fields, due_on, parent: superTask && superTask.id})\n      setFields(initialTask)\n      setSubmitStatus(null)\n      setTimeout(() => delete localStorage[`taskTrackerIncomplete_${projectId}`])\n    } catch(e) {\n      setSubmitStatus(e)\n    }\n    // todo: close\n  }\n}\n\nfunction getInitialFields(projectId) {\n  if (localStorage[`taskTrackerIncomplete_${projectId}`]) {\n    const res = JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])\n    return {...res, due_on: res.due_on && new Date(res.due_on)}\n  } else {\n    return initialTask\n  }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport {duration, Typography, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport { CSSTransition } from 'react-transition-group';\nimport TasksList from './TasksAsana/List';\nimport NewTask from './TasksAsana/NewTask';\nimport { isToday } from 'date-fns';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n        const tasksStore = this.getTasksStore()\n        const projectId = tasksStore && tasksStore.projectId\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            headerTab: tasksStore && !props.popup ? 'tasks' : 'info',\n            newTaskFormOpen: checkShouldTaskFormOpen(projectId),\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n\n        if (!list) return {}\n\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) return true;\n        if (nextProps.counters !== counters) return true;\n        if (nextProps.migratedCounters !== migratedCounters) return true;\n        if (nextProps.theme !== theme) return true;\n        if (nextState.headerTab !== this.state.headerTab) return true\n        if (nextState.newTaskFormOpen !== this.state.newTaskFormOpen) return true\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) this.loadContent();\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (list) list.scrollTop = prevProps.chatId === chatId ? scrollTop : 0;\n\n        if (prevProps.chatId !== this.props.chatId) {\n            const tasksStore = this.getTasksStore()\n            const projectId = tasksStore && tasksStore.projectId\n            this.setState({\n                headerTab: tasksStore ? 'tasks' : 'info',\n                newTaskFormOpen: checkShouldTaskFormOpen(projectId),\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        if (!this.listRef.current) return;\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef.current) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    getTasksStore () {\n        const { chatId } = this.props;\n        return chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n    }\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef.current) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    {!popup && (\n                        <ChatDetailsHeader onClose={onClose} tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })}/>\n                    )}\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = this.renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup);\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n\n    renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return (\n            <>\n                <CSSTransition\n                    timeout={{ enter: duration.enteringScreen, exit: duration.leavingScreen }}\n                    in={this.state.newTaskFormOpen}\n                    mountOnEnter={true}\n                    unmountOnExit={true}>\n                        <div>\n                            {this.state.newTaskFormOpen && <NewTask chatId={ chatId } onClose={()=>this.setState({newTaskFormOpen: false})} /> }\n                        </div>\n                </CSSTransition>\n\n                {!popup && <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onBackClick={this.handleHeaderClick}\n                    tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })} />}\n                {this.state.headerTab === 'info' && this.renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup)}\n                {this.state.headerTab === 'tasks' && <TasksList chatId={chatId} onNewTaskToggle={() => this.setState(({newTaskFormOpen}) => ({ newTaskFormOpen: !newTaskFormOpen}))} />}\n            </>\n        );\n    }\n\n    renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return <div\n            ref={this.listRef}\n            className={classNames('chat-details-list', 'scrollbars-hidden')}\n            onScroll={this.handleScroll}>\n            <div className='chat-details-info'>\n                <Chat\n                    chatId={chatId}\n                    big={true}\n                    showStatus={true}\n                    showSavedMessages={!popup}\n                    onTileSelect={photo ? this.handleOpenViewer : null} />\n                {!isMe && (\n                    <List className='chat-details-items'>\n                        {bio && (\n                            <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                <ListItemIcon>\n                                    <ErrorOutlineIcon className='chat-details-info-icon' />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={bio}\n                                    secondary={t('Bio')}\n                                    style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                            </ListItem>\n                        )}\n                        {username && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                <ListItemIcon>\n                                    <AlternateEmailIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={<Typography variant='inherit' noWrap>\n                                        {username}\n                                    </Typography>}\n                                    secondary={t('Username')} />\n                            </ListItem>\n                        )}\n                        {phoneNumber && (\n                            <>\n                                <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                    <ListItemIcon>\n                                        <CallIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={<Typography variant='inherit' noWrap>\n                                            {formatPhoneNumber(phoneNumber)}\n                                        </Typography>}\n                                        secondary={t('Phone')} />\n                                </ListItem>\n                            </>\n                        )}\n                        <NotificationsListItem chatId={chatId} />\n                        {popup && !isGroup && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    primary={<Typography color='primary' variant='inherit' noWrap>\n                                        {t('SendMessage').toUpperCase()}\n                                    </Typography>}\n                                    style={{ paddingLeft: 40 }} />\n                            </ListItem>\n                        )}\n                    </List>\n                )}\n            </div>\n\n            <div ref={this.dividerRef} />\n            <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\n            <SharedMediaContent ref={this.mediaRef} chatId={chatId} />\n        </div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nfunction checkShouldTaskFormOpen(projectId) {\n    const json = localStorage[`taskTrackerIncomplete_${projectId}`]\n    if (!json) return\n    return Object.entries(JSON.parse(json))\n        .filter(([key, value]) => key !== 'parent' && (key === 'due_on' ? !isToday(value) : true))\n        .map(([_, value]) => value)\n        .some(Boolean)\n}\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n        const chatId_ = popup ? dialogChatId : chatId;\n\n        this.state = {\n            chatId: chatId_,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n        props.onChangeChatId(chatId_) // TODO: перенести этот стейт выше\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n        this.props.onChangeChatId(update.nextChatId)\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n            this.props.onChangeChatId(0)\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        if (!chatId) return null;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false,\n    onChangeChatId: () => {}\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n        setTimeout(() => {\n            this.state.filters && this.state.filters[0] && this.state.filters[0].id && this.handleFilterClick(null, this.state.filters[0].id); // Select first folder\n        }, 300)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                    </div>))}\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport TaskTrackerIcon from '@material-ui/icons/Assignment';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onTaskTracker,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onTaskTracker}>\n                        <ListItemIcon>\n                            <TaskTrackerIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('TaskTracker')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n * TaskTracker extension settings panel\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './TaskTracker.css';\nimport { TextField, Link, Box, Typography, ListItem, List } from '@material-ui/core';\nimport ChatStore from '../../Stores/ChatStore';\nimport TaskTrackerStore from '../../Stores/TaskTrackerStore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { normMapping } from '../../Utils/Api';\n\nconst placeScriptGuideText = `\n// Task Place Compute Script\n// Examples. Choose one and customize it!\n\n// find single Placeholder task by name\n({tasks}) => {\n  const superTaskId = tasks.find(t => t.name === 'Placeholder task').gid\n  return [{superTaskId, sectionId: null}]\n}\n\n// find single Section\n({sections}) => {\n  const sectionId = tasks.find(t => t.name === 'Hot tasks section').gid\n  return [{superTaskId: null, sectionId}]\n}\n\n// static task or section id\n[{sectionId: '4646463535'}]\n\n// several place options\n[{superTaskId: '4646463535'}, {superTaskId: '6646463599'}]\n`;\n\nexport default function TaskTracker ({ onClose }) {\n    const [initialSettings] = useState(() => localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings))\n    const {t} = useTranslation();\n    const patRef = useRef();\n    const mappingRef = useRef();\n    const placeScriptRef = useRef();\n    const [mappingText, setMapping] = useState(initialSettings && initialSettings.mappingText || '');\n    const [pat, setPat] = useState(initialSettings && initialSettings.pat || '');\n    const [placeScript, setPlaceScript] = useState(initialSettings && initialSettings.placeScript || placeScriptGuideText);\n    const settings = useMemo(() => ({ pat, mappingText, placeScript }), [pat, mappingText, placeScript]);\n    useEffect(() => void (localStorage.taskTrackerSettings = JSON.stringify(settings)), [settings])\n\n    return (\n        <>\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>{t('Task Tracker')} (Asana)</span>\n                </div>\n            </div>\n            <div className='sidebar-page-content' style={{ display: 'flex', flexDirection: 'column' }}>\n                <Box p={2}>\n                    <TextField label=\"Asana Token (PAT)\" variant=\"outlined\" placeholder=\"X/XXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                        helperText={<Link href=\"https://app.asana.com/-/developer_console\" target=\"_blank\" rel=\"noopener\">Obtain PAT</Link>}\n                        fullWidth\n                        inputRef={patRef}\n                        value={pat}\n                        onChange={ () => patRef.current && setPat(patRef.current.value) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <div style={{ display: 'flex' }}>\n                        <Autocomplete options={[...ChatStore.items.entries()].map(([_, item]) => item).filter(item => !mappingText.includes(item.id))}\n                            getOptionLabel={item => item.title}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Chat')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text}\\n${value.id}(${value.title.replace(/[()]/g, '')}) `))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%'}}\n                        />\n                        <Autocomplete options={[...TaskTrackerStore.projects.entries()].map(([_, item]) => item)}\n                            getOptionLabel={item => item.name}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Project')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text} ${value.id}(${value.name.replace(/[()]/g, '')})\\n`))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%', marginLeft: 16 }}\n                        />\n                    </div>\n\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label=\"Mapping: Chat id <-> Project id\"\n                        placeholder={`chat_id project_id\\nchat_id project_id\\nchat_id project_id`}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap', fontSize: 12, lineHeight: 2 }}}\n                        inputRef={mappingRef}\n                        value={mappingText}\n                        onChange={ () => mappingRef.current && setMapping(normMapping(mappingRef.current.value)) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label={t('Task Place Compute Script')}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap' }}}\n                        inputRef={placeScriptRef}\n                        value={placeScript}\n                        onChange={ () => placeScriptRef.current && setPlaceScript(normMapping(placeScriptRef.current.value)) }\n                    />\n                </Box>\n            </div>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport TaskTracker from '../TaskTracker';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false,\n            openTasktracker: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => this.setState({ openEditProfile: true });\n    closeEditProfile = () => this.setState({ openEditProfile: false });\n    openGeneral = () => this.setState({ openGeneral: true });\n    closeGeneral = () => this.setState({ openGeneral: false });\n    openNotifications = () => this.setState({ openNotifications: true });\n    closeNotifications = () => this.setState({ openNotifications: false });\n    openPrivacySecurity = () => this.setState({ openPrivacySecurity: true });\n    closePrivacySecurity = () => this.setState({ openPrivacySecurity: false });\n    openLanguage = () => this.setState({ openLanguage: true });\n    closeLanguage = () => this.setState({ openLanguage: false });\n    openFilters = () => this.setState({ openFilters: true })\n    closeFilters = () => this.setState({ openFilters: false });\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                    onTaskTracker={() => this.setState({ openTasktracker: true })}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n                <SidebarPage open={this.state.openTasktracker} onClose={() => this.setState({ openTasktracker: false })}>\n                    <TaskTracker />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input (https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event#Result)\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            requestAnimationFrame(() => element.innerHTML = null);\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                // delay\n                requestAnimationFrame(() => requestAnimationFrame(() => {\n                    getChatFullInfo(chatId);\n                    getChatMedia(chatId);\n                }))\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        requestAnimationFrame(() => {\n            const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n            const list = this.listRef.current;\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        })\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator, isMeChat, isPrivateChat, isSupergroup } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return <LeaveChatDialog chatId={chatId} onClose={this.handleLeaveContinue} />\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return <ClearHistoryDialog chatId={chatId} onClose={this.handleClearHistoryContinue} />;\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n        const isRightPanelOpen = Boolean(ChatStore.get(this.state.chatId))\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isRightPanelOpen\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    <ChatInfo onChangeChatId={(chatId) => this.setState({ chatId })} />\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}