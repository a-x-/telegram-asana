{"version":3,"sources":["Stores/TaskTrackerStore.js","Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/TasksAsana/List.js","Components/ColumnRight/TasksAsana/NewTask.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Assets/Icons/SharedMedia.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/TaskTracker.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Assets/Icons/Document2.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["TT","ASANA","taskTrackerSettings","localStorage","JSON","parse","initialTasks","initialProjects","initialChats","parseMapping","mappingText","asanaHeaders","Headers","pat","_getTaskPlaces","getTaskPlaceScript","TaskTrackerStore","getTasks","projectId","a","console","error","fetch","headers","then","r","json","tasks","data","errors","Error","message","withIds","getTasksBySection","sectionId","fields","url","join","submitTask","params","method","body","stringify","projects","res","emit","getTaskPlaces","getSectionsWithTasks","taskFields","Promise","getSections","section","awaitAndEnchance","id","map","all","sections","reset","setTimeout","loadProjects","loadUsers","this","chats","users","EventEmitter","items","item","gid","promise","mapper","resolve","reject","normMapping","trim","replace","split","forEach","line","chatId","tasksStore","trimLeft","settings","result","placeScript","eval","e","Array","isArray","store","window","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","props","setState","emojis","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","navigator","clipboard","writeText","copyOld","successful","createElement","contentEditable","readOnly","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","catch","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","HEADER_TABS","HeadTabs","withStyles","indicator","display","Tabs","HeadTab","minWidth","Tab","ChatDetailsHeader","backButton","onBackClick","onTabChange","TasksStore","info","isChannelChat","overflow","marginLeft","findIndex","tab","_","label","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","nextContext","openMedia","miniSrc","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","domain","punycode","ToUnicode","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","overScanCount","SharedMediaContent","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","renderIdsList","log","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","voice_note","TasksList","onNewTaskToggle","useState","sessionStorage","setSections","status","setStatus","refreshToken","setRefreshToken","useEffect","overflowY","CircularProgress","right","name","List","paddingTop","permalink_url","divider","Link","underline","href","rel","wordWrap","Box","Fab","Add","initialTask","assignee","due_on","notes","titles","NewTask","_users","submitStatus","setSubmitStatus","useMemo","getInitialFields","setFields","useTranslation","refs","useRef","taskPlaces","setTaskPlaces","setTasks","superTask","superTaskId","persistFields","useCallback","_fields","formatISO","representation","places","alert","FormControl","fullWidth","parent","opacity","border","boxShadow","TextField","getFieldProps","targetValue","marginBottom","autoOk","disablePast","format","startOfDay","days","weeks","startOfWeek","weekStartsOn","rows","multiline","undefined","fontWeight","toString","field","inputVariant","inputRef","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","getTasksStore","headerTab","newTaskFormOpen","Object","values","some","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","renderContent","CSSTransition","timeout","enter","enteringScreen","exit","leavingScreen","in","mountOnEnter","unmountOnExit","renderInfo","onScroll","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","indicatorColor","textColor","scrollable","scrollButtons","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","onChangeChatId","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","chatId_","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","chatList","authorization_state","chat_filters","onClientUpdate","addTdLibListener","removeTdLibListener","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","getItem","setItem","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","entries","getCache","save","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onTaskTracker","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","defaultValue","FilterChat","role","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","placeScriptGuideText","TaskTracker","initialSettings","patRef","mappingRef","placeScriptRef","setMapping","setPat","setPlaceScript","flexDirection","helperText","Autocomplete","getOptionLabel","renderInput","getOptionSelected","flexBasis","lineHeight","handleMuteFor","property","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","openTasktracker","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","isMetaBubble","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","Actions","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","isRightPanelOpen","withLanguage"],"mappings":"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","file":"static/js/4.9112de19.chunk.js","sourcesContent":["import EventEmitter from './EventEmitter';\nimport {memoize} from 'lodash'; // Note: uses 1th arg as string only!\n\nexport const TT = {\n  ASANA: 'ASANA',\n}\nconst taskTrackerSettings = localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings)\nexport const initialTasks = []\nexport const initialProjects = []\nexport const initialChats = taskTrackerSettings ? parseMapping(taskTrackerSettings.mappingText) : {}\nconst asanaHeaders = new Headers({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${taskTrackerSettings && taskTrackerSettings.pat || 'OPEN TELEGRAM SETTINS > TaskTracker'}`,\n})\nconst _getTaskPlaces = getTaskPlaceScript(taskTrackerSettings)\n\n\nclass TaskTrackerStore extends EventEmitter {\n  constructor() {\n      super();\n      this.reset();\n      setTimeout(() => {\n        this.loadProjects();\n        this.loadUsers();\n      }, 1000); // low priority\n  }\n  reset() {\n    this.projects = initialProjects;\n    this.chats = initialChats;\n    this.users = [];\n  }\n  async loadProjects() {\n    const {data: projects, errors} = await fetch('https://app.asana.com/api/1.0/projects', { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    this.projects = withIds(projects)\n  }\n  async loadUsers() {\n    const {data: users, errors} = await fetch('https://app.asana.com/api/1.0/users', { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    this.users = withIds(users)\n  }\n\n  //\n  // == Public\n\n  getTasks = async (projectId) => {\n    if (!projectId) {\n      console.error('getTasks: projectId is unset')\n      return []\n    }\n    const {data: tasks, errors} = await fetch(`https://app.asana.com/api/1.0/projects/${projectId}/tasks`, { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    return withIds(tasks)\n  }\n  getTasksBySection = async (sectionId, fields) => {\n    if (!sectionId) {\n      console.error('getTasksBySection: sectionId is unset')\n      return []\n    }\n    const url = `https://app.asana.com/api/1.0/sections/${sectionId}/tasks${fields ? `?opt_expand=${fields.join(',')}` : ''}`\n    const {data: tasks, errors} = await fetch(url, { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    return withIds(tasks)\n  }\n  /**\n   * @param projectId {number}\n   * @param data {object}\n   */\n  submitTask = async (projectId, data) => {\n    const params = { method: 'POST', headers: asanaHeaders, body: JSON.stringify({data: {...data, projects: [projectId]}}) };\n    const res = await fetch('https://app.asana.com/api/1.0/tasks', params).then(res => res.json());\n    if (res.errors) throw new Error(res.errors[0] && res.errors[0].message || 'Error');\n    this.emit('taskCreated', res)\n  }\n\n  getTaskPlaces = ({tasks}) => _getTaskPlaces({tasks})\n\n  getSectionsWithTasks = async (projectId) => {\n    const taskFields = ['notes', 'name', 'permalink_url', 'gid', 'assignee.name', 'completed', 'section'];\n    const sections = await Promise.all((await this.getSections(projectId))\n      .map(section => awaitAndEnchance(\n        this.getTasksBySection(section.id, taskFields),\n        tasks => ({tasks, ...section})\n      ))\n    );\n    return sections; // Array<{id, name, tasks: Task[]}>\n  }\n\n  getSections = async (projectId) => {\n    const {data: tasks, errors} = await fetch(`https://app.asana.com/api/1.0/projects/${projectId}/sections`, { headers: asanaHeaders }).then(r => r.json())\n    if (errors) throw new Error(errors[0] && errors[0].message || 'Error');\n    return withIds(tasks)\n  }\n}\n\nfunction withIds (items) {\n  return items.map((item) => ({...item, id: item.gid}));\n}\n\nfunction awaitAndEnchance (promise, mapper) {\n  return new Promise((resolve, reject) => {\n    promise.then((res) => resolve(mapper(res)), reject);\n  })\n}\n\nfunction parseMapping (mappingText) {\n  const res = {};\n  normMapping(mappingText).trim().replace(/\\s*\\(.+?\\)/g, '').split('\\n').forEach(line => {\n    const [chatId, projectId] = line.trim().split(' ')\n    res[chatId] = {tasksStore: {projectId}};\n  })\n  return res;\n}\n\n\nexport function normMapping (mappingText) {\n  return mappingText.trimLeft().replace(/\\n{2,}/g, '\\n').replace(/ +/g, ' ');\n}\n\nfunction getTaskPlaceScript (settings) {\n  let result = []\n  try {\n    result = settings && settings.placeScript && eval(settings.placeScript)\n  } catch (e) {\n    console.error('Task Place Compute Script отработал с ошибкой')\n  }\n  if (typeof result === 'function') return result;\n  if (Array.isArray(result)) return () => result;\n  return undefined;\n}\n\nconst store = new TaskTrackerStore();\nwindow.tasksStore = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\nimport { Tab, Tabs, withStyles } from '@material-ui/core';\n\nconst HEADER_TABS = ['info', 'tasks', 'webs', 'files']\n\nconst HeadTabs = withStyles({ indicator: { display: 'none' } })(Tabs)\nconst HeadTab = withStyles({ root: { minWidth: 0, color: 'grey' }, selected: { color: 'black'} })(Tab);\n\nclass ChatDetailsHeader extends React.Component {\n    render() {\n        const { chatId, t, backButton, onBackClick, onClose, onTabChange } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Person Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onBackClick}>\n                    <span className='header-status-content' style={{ overflow: 'visible' }}>\n                        <HeadTabs\n                            style={{ marginLeft: -12 }}\n                            value={ HEADER_TABS.findIndex(t => t === this.props.tab) }\n                            onChange={ (_, value) => onTabChange(HEADER_TABS[value]) }\n                        >\n                            <HeadTab label={info} className=\"chat-header-text\"/>\n                            { tasksStore && [\n                                <HeadTab key=\"tasks\" label=\"Tasks\"/>,\n                                <HeadTab key=\"webs\" label=\"Webs\" disabled/>,\n                                <HeadTab key=\"files\" label=\"Files\" disabled/>,\n                            ]}\n                        </HeadTabs>\n                    </span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div className='shared-media-tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            let { text, caption } = message.content;\n            text = text || caption;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(message) {\n        if (!message) return undefined;\n\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return undefined;\n            }\n            case 'messageVideo': {\n                return undefined;\n            }\n            case 'messageDocument': {\n                return 78;\n            }\n            case 'messageAudio': {\n                return 94;\n            }\n            case 'messageVoiceNote': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        } = this.state;\n\n        console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0;\n        if (!hasItems) {\n            return null;\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x)}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\n\nimport {Box, CircularProgress, Fab, Link, List, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core';\nimport CheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport UncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { Add } from '@material-ui/icons';\n\nexport default function TasksList ({ chatId, onNewTaskToggle }) {\n  const [{ chats, getSectionsWithTasks }] = useState(TaskTrackerStore);\n  const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n  const [sections, setSections] = useState(() => sessionStorage[`taskTracker_sections_${projectId}`] && JSON.parse(sessionStorage[`taskTracker_sections_${projectId}`]) || null)\n  const [status, setStatus] = useState(null)\n  const [refreshToken, setRefreshToken] = useState(null)\n\n  useEffect(() => {\n    setStatus('loading')\n    getSectionsWithTasks(projectId).then(items => (setSections(items), setStatus(null), sessionStorage[`taskTracker_sections_${projectId}`] = JSON.stringify(items)), setStatus)\n  }, [projectId, refreshToken])\n\n  useEffect(() => void TaskTrackerStore.on('taskCreated', () => setRefreshToken(Date.now())), [])\n\n  return <div className=\"chat-tasks-list\" style={{ overflowY: 'auto' }}>\n      <div className={classNames('chat', { 'chat-big': true })}>\n          <div className='chat-wrapper'>\n              <div className='chat-details-items'>\n                {status === 'loading' && <CircularProgress style={{ right: 30, position: 'absolute' }} size={24} /> }\n                {sections\n                  ? sections.map((section) => <>\n                    { section.name && section.name !== '(no section)' && (\n                      <Typography variant='h6' style={{ marginLeft: 16, color: 'grey' }}>{ section.name.toLowerCase() }</Typography>\n                    )}\n                    {renderItems(section.tasks)}\n                  </>)\n                  : <Box p={2}><i style={{ color: 'grey' }}>Just a sec</i></Box>\n                }\n              </div>\n\n              <Fab className=\"chat-tasks-add\" aria-label=\"add\" color=\"primary\"\n                  onClick={onNewTaskToggle}\n              >\n                  <Add/>\n              </Fab>\n          </div>\n      </div>\n  </div>\n\n  function renderItems(tasks) {\n    return <List className='chat-details-items' style={{ paddingTop: 0 }}>\n      { tasks.map(({id,name,permalink_url,completed}) => (\n          <ListItem key={id} divider className='list-item-compact' alignItems='flex-start'>\n              <ListItemIcon>{completed ? <CheckedIcon color=\"disabled\"/> : <UncheckedIcon color=\"disabled\"/> }</ListItemIcon>\n              <ListItemText\n                primary={<Link color=\"inherit\" underline=\"none\" href={ permalink_url } target=\"_blank\" rel=\"noopener noreferrer\">{name}</Link>}\n                style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n              />\n          </ListItem>\n      ))}\n    </List>\n  }\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport TaskTrackerStore from '../../../Stores/TaskTrackerStore';\n\nimport { FormControl, IconButton, TextField, Box, Button, MenuItem, Chip, CircularProgress, Typography, Link } from \"@material-ui/core\";\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { add, formatISO, startOfDay } from 'date-fns'\nimport { startOfWeek } from 'date-fns/esm';\nimport { debounce } from '../../../Utils/Common';\n\nconst initialTask = {\n  name: '',\n  assignee: '',\n  due_on: null,\n  notes: '',\n}\nconst titles = {\n  name: 'Task name',\n  assignee: 'Assignee',\n  due_on: 'Deadline',\n  notes: 'Description',\n}\n\nexport default function NewTask ({ chatId, onClose }) {\n    const [{ projects, chats, users: _users, getTaskPlaces, getTasks }] = useState(TaskTrackerStore);\n    const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n    const [submitStatus, setSubmitStatus] = useState(null);\n    const users = useMemo(() => [{id:'me', name: 'Me'}, ..._users], [_users]);\n    const [fields, setFields] = useState(() => getInitialFields(projectId))\n    const { t } = useTranslation();\n    const refs = useRef({})\n    const [taskPlaces, setTaskPlaces] = useState(null)\n    const [tasks, setTasks] = useState([])\n    const superTask = useMemo(() => taskPlaces && taskPlaces[0] && tasks.find(t => t.id === taskPlaces[0].superTaskId), [taskPlaces, tasks])\n    const persistFields = useCallback(debounce((_fields) => void setTimeout(() => {\n      const fields = { ..._fields, due_on: _fields.due_on && formatISO(_fields.due_on, { representation: 'date'})}\n      console.log('save fields', fields, 'to', projectId)\n      localStorage[`taskTrackerIncomplete_${projectId}`] = JSON.stringify(fields)\n    }),600), [])\n\n    useEffect(() => {\n      if (!projectId) return\n      getTasks(projectId).then(tasks => {\n        setTasks(tasks)\n        const places = getTaskPlaces({tasks})\n        if (Array.isArray(places)) setTaskPlaces(places)\n        else alert(`${t('Task Place Compute Script')} must return array`)\n      })\n    }, [projectId]);\n    useEffect(() => void persistFields(fields), [fields])\n\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return null\n\n    return <div className='chat-tasks-new-form'>\n        <div className='header-master'>\n            <IconButton className='header-left-button' onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow'>\n                <span className='header-status-content'>{t('New task')}</span>\n            </div>\n        </div>\n\n        <div className='chat-tasks-new-form-controls'>\n            <FormControl fullWidth variant='outlined'>\n                <Box p={2}>\n                  {!taskPlaces && (\n                    <Typography variant='caption' style={{ color: 'grey'}}><i>Loading task place...</i></Typography>\n                  ) ||\n                  taskPlaces.length <= 1 && (\n                    <Typography variant='caption' style={{ color: 'grey'}}>\n                      {\n                        superTask\n                          ? <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}/${superTask.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {superTask.name} ❯\n                          </Link>\n                          : <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {t('Project root')} ❯\n                          </Link>\n                      }\n                    </Typography>\n                  ) ||\n                  (\n                    <select onChange={e=> setFields({ parent: e.target.value})} value={fields.parent || ''} style={{ opacity: .6, border: 'none', width: '100%', boxShadow: '0 8px 0 -1px white, 0 9px 0 -1px grey'}}>\n                      <option value=\"\">Project root</option>\n                      {taskPlaces.map(p => {\n                        const name = tasks.find(t => t.id === p.superTaskId).name\n                        return <option key={p.id} value={p.superTaskId}>{name}</option>\n                      })}\n                    </select>\n                  )}\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('name')} autoFocus />\n                </Box>\n                <Box p={2}>\n                  <TextField select {...getFieldProps('assignee', {targetValue: true})} style={{ marginBottom: 8 }}>\n                    {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n                  </TextField>\n                  <Chip onClick={ () => setFields(fields => ({ ...fields, assignee: 'me' })) } label={t('Me')}/>\n                </Box>\n                <Box p={2}>\n                  <KeyboardDatePicker autoOk disablePast format=\"dd.MM.yyyy\"\n                    style={{ marginBottom: 8 }}\n                    {...getFieldProps('due_on', {targetValue: null})}\n                    variant=\"inline\"\n                  />\n\n                  <div style={{ display: 'flex' }}>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { days: 1 })) })) } label={t('Tomorrow')}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { weeks: 1 })) })) } label={t('In a Week')} style={{ marginLeft: 8 }}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: add(startOfWeek(new Date(), {weekStartsOn: 1}), { weeks: 1 }) })) } label={t('Monday')} style={{ marginLeft: 8 }}/>\n                  </div>\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('notes')} rows={16} multiline />\n                </Box>\n            </FormControl>\n\n            <Box p={2} style={{ display: 'flex', alignItems: 'center' }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={submitStatus === 'loading' ? undefined : handleSubmit} style={{ color: 'white' }}>\n                {submitStatus === 'loading' ? <CircularProgress size={24} style={{ color: 'white' }} /> : t('Create')}\n              </Button>\n              { submitStatus instanceof Error && <div style={{ marginLeft: 16, color: 'red', fontWeight: 500 }}>{ submitStatus.toString() }</div> }\n            </Box>\n        </div>\n    </div>\n\n  /**\n   * @returns {import('@material-ui/core').OutlinedTextFieldProps}\n   */\n  function getFieldProps(field, {targetValue = false} = {}) {\n    return {\n      variant: 'outlined',\n      // @ts-ignore\n      inputVariant: 'outlined',\n      fullWidth: true,\n      value: fields[field],\n      label: t(titles[field]),\n      inputRef: (ref) => refs.current[field] = ref,\n      onChange:\n        (targetValue === true && ((e) => setFields(fields => ({...fields, [field]: e.target.value })))) ||\n        // Тут какой-то сломаный MUI, в котором не работает e.target.value... Пиздец блядь\n        (targetValue === false && (() => setFields(fields => ({...fields, [field]: refs.current[field] && refs.current[field].value })))) ||\n        ((value) => setFields(fields => ({...fields, [field]: value })))\n\n    }\n  }\n\n  async function handleSubmit () {\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return alert('Не подтянулась инфа из асаны')\n    const {projectId} = chats[chatId].tasksStore\n\n    const due_on = fields.due_on && formatISO(fields.due_on, { representation: 'date'});\n    try {\n      setSubmitStatus('loading')\n      await TaskTrackerStore.submitTask(projectId, {...fields, due_on, parent: superTask && superTask.id})\n      setFields(initialTask)\n      setSubmitStatus(null)\n      setTimeout(() => delete localStorage[`taskTrackerIncomplete_${projectId}`])\n    } catch(e) {\n      setSubmitStatus(e)\n    }\n    // todo: close\n  }\n}\n\nfunction getInitialFields(projectId) {\n  if (localStorage[`taskTrackerIncomplete_${projectId}`]) {\n    const res = JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])\n    return {...res, due_on: res.due_on && new Date(res.due_on)}\n  } else {\n    return initialTask\n  }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport {duration, Typography, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport { CSSTransition } from 'react-transition-group';\nimport TasksList from './TasksAsana/List';\nimport NewTask from './TasksAsana/NewTask';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n        const tasksStore = this.getTasksStore()\n        const projectId = tasksStore && tasksStore.projectId\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            headerTab: tasksStore ? 'tasks' : 'info',\n            newTaskFormOpen: Boolean(localStorage[`taskTrackerIncomplete_${projectId}`]) && Object.values(JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])).some(Boolean),\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n\n        if (!list) return {}\n\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     const { chatId, theme, counters, migratedCounters } = this.props;\n\n    //     if (nextProps.chatId !== chatId) return true;\n    //     if (nextProps.counters !== counters) return true;\n    //     if (nextProps.migratedCounters !== migratedCounters) return true;\n    //     if (nextProps.theme !== theme) return true;\n    //     if (nextState.headerTab !== this.state.headerTab) return true\n    //     if (nextState.newTaskFormOpen !== this.state.newTaskFormOpen) return true\n\n    //     return false;\n    // }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) this.loadContent();\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (list) list.scrollTop = prevProps.chatId === chatId ? scrollTop : 0;\n\n        if (prevProps.chatId !== this.props.chatId) {\n            const tasksStore = this.getTasksStore()\n            const projectId = tasksStore && tasksStore.projectId\n            this.setState({\n                headerTab: tasksStore ? 'tasks' : 'info',\n                newTaskFormOpen: Boolean(localStorage[`taskTrackerIncomplete_${projectId}`]) && Object.values(JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])).some(Boolean),\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        if (!this.listRef.current) return;\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef.current) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    getTasksStore () {\n        const { chatId } = this.props;\n        return chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n    }\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef.current) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })}/>\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = this.renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup);\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n\n    renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return (\n            <>\n                <CSSTransition\n                    timeout={{ enter: duration.enteringScreen, exit: duration.leavingScreen }}\n                    in={this.state.newTaskFormOpen}\n                    mountOnEnter={true}\n                    unmountOnExit={true}>\n                        <div>\n                            {this.state.newTaskFormOpen && <NewTask chatId={ chatId } onClose={()=>this.setState({newTaskFormOpen: false})} /> }\n                        </div>\n                </CSSTransition>\n\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onBackClick={this.handleHeaderClick}\n                    tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })} />\n                {this.state.headerTab === 'info' && this.renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup)}\n                {this.state.headerTab === 'tasks' && <TasksList chatId={chatId} onNewTaskToggle={() => this.setState(({newTaskFormOpen}) => ({ newTaskFormOpen: !newTaskFormOpen}))} />}\n            </>\n        );\n    }\n\n    renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return <div\n            ref={this.listRef}\n            className={classNames('chat-details-list', 'scrollbars-hidden')}\n            onScroll={this.handleScroll}>\n            <div className='chat-details-info'>\n                <Chat\n                    chatId={chatId}\n                    big={true}\n                    showStatus={true}\n                    showSavedMessages={!popup}\n                    onTileSelect={photo ? this.handleOpenViewer : null} />\n                {!isMe && (\n                    <List className='chat-details-items'>\n                        {bio && (\n                            <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                <ListItemIcon>\n                                    <ErrorOutlineIcon className='chat-details-info-icon' />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={bio}\n                                    secondary={t('Bio')}\n                                    style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                            </ListItem>\n                        )}\n                        {username && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                <ListItemIcon>\n                                    <AlternateEmailIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={<Typography variant='inherit' noWrap>\n                                        {username}\n                                    </Typography>}\n                                    secondary={t('Username')} />\n                            </ListItem>\n                        )}\n                        {phoneNumber && (\n                            <>\n                                <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                    <ListItemIcon>\n                                        <CallIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={<Typography variant='inherit' noWrap>\n                                            {formatPhoneNumber(phoneNumber)}\n                                        </Typography>}\n                                        secondary={t('Phone')} />\n                                </ListItem>\n                            </>\n                        )}\n                        <NotificationsListItem chatId={chatId} />\n                        {popup && !isGroup && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    primary={<Typography color='primary' variant='inherit' noWrap>\n                                        {t('SendMessage').toUpperCase()}\n                                    </Typography>}\n                                    style={{ paddingLeft: 40 }} />\n                            </ListItem>\n                        )}\n                    </List>\n                )}\n            </div>\n\n            <div ref={this.dividerRef} />\n            <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\n            <SharedMediaContent ref={this.mediaRef} chatId={chatId} />\n        </div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n        const chatId_ = popup ? dialogChatId : chatId;\n\n        this.state = {\n            chatId: chatId_,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n        props.onChangeChatId(chatId_) // TODO: перенести этот стейт выше\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n        this.props.onChangeChatId(update.nextChatId)\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n            this.props.onChangeChatId(0)\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        if (!chatId) return null;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n        setTimeout(() => {\n            this.state.filters && this.state.filters[0] && this.state.filters[0].id && this.handleFilterClick(null, this.state.filters[0].id); // Select first folder\n        }, 300)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                    </div>))}\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport TaskTrackerIcon from '@material-ui/icons/Assignment';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onTaskTracker,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onTaskTracker}>\n                        <ListItemIcon>\n                            <TaskTrackerIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('TaskTracker')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n * TaskTracker extension settings panel\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './TaskTracker.css';\nimport { TextField, Link, Box, Typography, ListItem, List } from '@material-ui/core';\nimport ChatStore from '../../Stores/ChatStore';\nimport TaskTrackerStore, { normMapping } from '../../Stores/TaskTrackerStore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst placeScriptGuideText = `\n// Task Place Compute Script\n// Examples. Choose one and customize it!\n\n// find single Placeholder task by name\n({tasks}) => {\n  const superTaskId = tasks.find(t => t.name === 'Placeholder task').gid\n  return [{superTaskId, sectionId: null}]\n}\n\n// find single Section\n({sections}) => {\n  const sectionId = tasks.find(t => t.name === 'Hot tasks section').gid\n  return [{superTaskId: null, sectionId}]\n}\n\n// static task or section id\n[{sectionId: '4646463535'}]\n\n// several place options\n[{superTaskId: '4646463535'}, {superTaskId: '6646463599'}]\n`;\n\nexport default function TaskTracker ({ onClose }) {\n    const [initialSettings] = useState(() => localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings))\n    const {t} = useTranslation();\n    const patRef = useRef();\n    const mappingRef = useRef();\n    const placeScriptRef = useRef();\n    const [mappingText, setMapping] = useState(initialSettings && initialSettings.mappingText || '');\n    const [pat, setPat] = useState(initialSettings && initialSettings.pat || '');\n    const [placeScript, setPlaceScript] = useState(initialSettings && initialSettings.placeScript || placeScriptGuideText);\n    const settings = useMemo(() => ({ pat, mappingText, placeScript }), [pat, mappingText, placeScript]);\n    useEffect(() => void (localStorage.taskTrackerSettings = JSON.stringify(settings)), [settings])\n\n    return (\n        <>\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>{t('Task Tracker')} (Asana)</span>\n                </div>\n            </div>\n            <div className='sidebar-page-content' style={{ display: 'flex', flexDirection: 'column' }}>\n                <Box p={2}>\n                    <TextField label=\"Asana Token (PAT)\" variant=\"outlined\" placeholder=\"X/XXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                        helperText={<Link href=\"https://app.asana.com/-/developer_console\" target=\"_blank\" rel=\"noopener\">Obtain PAT</Link>}\n                        fullWidth\n                        inputRef={patRef}\n                        value={pat}\n                        onChange={ () => patRef.current && setPat(patRef.current.value) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <div style={{ display: 'flex' }}>\n                        <Autocomplete options={[...ChatStore.items.entries()].map(([_, item]) => item).filter(item => !mappingText.includes(item.id))}\n                            getOptionLabel={item => item.title}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Chat')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text}\\n${value.id}(${value.title}) `))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%'}}\n                        />\n                        <Autocomplete options={[...TaskTrackerStore.projects.entries()].map(([_, item]) => item)}\n                            getOptionLabel={item => item.name}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Project')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text} ${value.id}(${value.name})\\n`))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%', marginLeft: 16 }}\n                        />\n                    </div>\n\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label=\"Mapping: Chat id <-> Project id\"\n                        placeholder={`chat_id project_id\\nchat_id project_id\\nchat_id project_id`}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap', fontSize: 12, lineHeight: 2 }}}\n                        inputRef={mappingRef}\n                        value={mappingText}\n                        onChange={ () => mappingRef.current && setMapping(normMapping(mappingRef.current.value)) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label={t('Task Place Compute Script')}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap' }}}\n                        inputRef={placeScriptRef}\n                        value={placeScript}\n                        onChange={ () => placeScriptRef.current && setPlaceScript(normMapping(placeScriptRef.current.value)) }\n                    />\n                </Box>\n            </div>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport TaskTracker from '../TaskTracker';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false,\n            openTasktracker: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => this.setState({ openEditProfile: true });\n    closeEditProfile = () => this.setState({ openEditProfile: false });\n    openGeneral = () => this.setState({ openGeneral: true });\n    closeGeneral = () => this.setState({ openGeneral: false });\n    openNotifications = () => this.setState({ openNotifications: true });\n    closeNotifications = () => this.setState({ openNotifications: false });\n    openPrivacySecurity = () => this.setState({ openPrivacySecurity: true });\n    closePrivacySecurity = () => this.setState({ openPrivacySecurity: false });\n    openLanguage = () => this.setState({ openLanguage: true });\n    closeLanguage = () => this.setState({ openLanguage: false });\n    openFilters = () => this.setState({ openFilters: true })\n    closeFilters = () => this.setState({ openFilters: false });\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                    onTaskTracker={() => this.setState({ openTasktracker: true })}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n                <SidebarPage open={this.state.openTasktracker} onClose={() => this.setState({ openTasktracker: false })}>\n                    <TaskTracker />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator, isMeChat, isPrivateChat, isSupergroup } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return <LeaveChatDialog chatId={chatId} onClose={this.handleLeaveContinue} />\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return <ClearHistoryDialog chatId={chatId} onClose={this.handleClearHistoryContinue} />;\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n        const isRightPanelOpen = Boolean(ChatStore.get(this.state.chatId))\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isRightPanelOpen\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    <ChatInfo onChangeChatId={(chatId) => this.setState({ chatId })} />\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}