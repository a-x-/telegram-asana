{"version":3,"sources":["Stores/TaskTrackerStore.js","Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/TasksAsana/List.js","Components/ColumnRight/TasksAsana/NewTask.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Assets/Icons/SharedMedia.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/TaskTracker.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Assets/Icons/Document2.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["TT","ASANA","taskTrackerSettings","localStorage","JSON","parse","initialTasks","initialProjects","initialChats","parseMapping","mappingText","asanaHeaders","Headers","pat","getTaskPlaces","getTaskPlaceScript","TaskTrackerStore","submitTask","projectId","data","a","params","method","headers","body","stringify","projects","fetch","then","res","json","errors","Error","message","getTasks","tasks","reset","setTimeout","loadProjects","loadUsers","memoize","_getTasks","this","chats","users","r","map","item","id","gid","console","error","EventEmitter","normMapping","trim","replace","split","forEach","line","chatId","tasksStore","trimLeft","settings","result","placeScript","eval","Array","isArray","store","window","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","navigator","clipboard","writeText","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","catch","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","HEADER_TABS","HeadTabs","withStyles","indicator","display","Tabs","HeadTab","minWidth","Tab","ChatDetailsHeader","backButton","onBackClick","onTabChange","TasksStore","info","isChannelChat","overflow","marginLeft","findIndex","tab","_","label","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","nextContext","openMedia","miniSrc","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","domain","punycode","ToUnicode","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","overScanCount","SharedMediaContent","items","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","renderIdsList","log","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","voice_note","fake","TasksList","onNewTaskToggle","useState","List","divider","wordWrap","Fab","Add","initialTask","name","assignee","due_on","notes","titles","NewTask","_users","submitStatus","setSubmitStatus","useMemo","getInitialFields","fields","setFields","useTranslation","refs","useRef","taskPlaces","setTaskPlaces","setTasks","superTask","superTaskId","persistFields","useCallback","_fields","formatISO","representation","useEffect","FormControl","fullWidth","Box","Link","underline","href","rel","TextField","getFieldProps","targetValue","marginBottom","autoOk","disablePast","format","startOfDay","days","weeks","startOfWeek","weekStartsOn","rows","multiline","undefined","CircularProgress","fontWeight","toString","field","inputVariant","inputRef","alert","parent","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","headerTab","newTaskFormOpen","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","renderContent","CSSTransition","timeout","enter","enteringScreen","exit","leavingScreen","in","mountOnEnter","unmountOnExit","renderInfo","onScroll","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","indicatorColor","textColor","scrollable","scrollButtons","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","onChangeChatId","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","chatId_","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","getItem","setItem","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","theme","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onTaskTracker","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","defaultValue","FilterChat","role","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","placeScriptGuideText","TaskTracker","initialSettings","patRef","mappingRef","placeScriptRef","setMapping","setPat","setPlaceScript","flexDirection","helperText","Autocomplete","getOptionLabel","renderInput","getOptionSelected","flexBasis","lineHeight","handleMuteFor","property","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","setContextMenu","setTop","setLeft","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","openTasktracker","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","isMetaBubble","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","Actions","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","isRightPanelOpen","withLanguage"],"mappings":"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","file":"static/js/4.191891b2.chunk.js","sourcesContent":["import EventEmitter from './EventEmitter';\nimport {memoize} from 'lodash'; // Note: uses 1th arg as string only!\n\nexport const TT = {\n  ASANA: 'ASANA',\n}\nconst taskTrackerSettings = localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings)\nexport const initialTasks = []\nexport const initialProjects = []\nexport const initialChats = parseMapping(taskTrackerSettings.mappingText)\nconst asanaHeaders = new Headers({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': `Bearer ${taskTrackerSettings && taskTrackerSettings.pat || 'OPEN TELEGRAM SETTINS > TaskTracker'}`,\n})\nconst getTaskPlaces = getTaskPlaceScript(taskTrackerSettings)\n\n\nclass TaskTrackerStore extends EventEmitter {\n  constructor() {\n      super();\n      this.reset();\n      setTimeout(() => {\n        this.loadProjects();\n        this.loadUsers();\n      }, 1000); // low priority\n    this.getTasks = memoize(this._getTasks);\n  }\n  reset() {\n    this.projects = initialProjects;\n    this.chats = initialChats;\n    this.users = [];\n  }\n  async loadProjects() {\n    const {data: projects} = await fetch('https://app.asana.com/api/1.0/projects', { headers: asanaHeaders }).then(r => r.json())\n    this.projects = projects.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n  async loadUsers() {\n    const {data: users} = await fetch('https://app.asana.com/api/1.0/users', { headers: asanaHeaders }).then(r => r.json())\n    this.users = users.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n  async _getTasks(projectId) {\n    if (!projectId) {\n      console.error('getTasks: projectId is unset')\n      return []\n    }\n    const {data: tasks} = await fetch(`https://app.asana.com/api/1.0/tasks?project=${projectId}`, { headers: asanaHeaders }).then(r => r.json())\n    return tasks.map((item) => ({...item, id: item.gid}));\n    // todo: error,loading\n  }\n\n  //\n  // == Public\n\n  /**\n   * @param projectId {number}\n   * @param data {object}\n   */\n  submitTask = async (projectId, data) => {\n    const params = { method: 'POST', headers: asanaHeaders, body: JSON.stringify({data: {...data, projects: [projectId]}}) };\n    const res = await fetch('https://app.asana.com/api/1.0/tasks', params).then(res => res.json());\n    if (res.errors) throw new Error(res.errors[0] && res.errors[0].message || 'Error');\n  }\n\n  getTaskPlaces = async (projectId) => {\n    const tasks = await this.getTasks(projectId)\n    return getTaskPlaces({ tasks })\n  }\n}\n\nfunction parseMapping (mappingText) {\n  const res = {};\n  normMapping(mappingText).trim().replace(/\\s*\\(.+?\\)/g, '').split('\\n').forEach(line => {\n    const [chatId, projectId] = line.trim().split(' ')\n    res[chatId] = {tasksStore: {projectId}};\n  })\n  return res;\n}\n\n\nexport function normMapping (mappingText) {\n  return mappingText.trimLeft().replace(/\\n{2,}/g, '\\n').replace(/ +/g, ' ');\n}\n\nfunction getTaskPlaceScript (settings) {\n  const result = settings && settings.placeScript && eval(settings.placeScript)\n  if (typeof result === 'function') return result;\n  if (Array.isArray(result)) return () => result;\n  return undefined;\n}\n\nconst store = new TaskTrackerStore();\nwindow.tasksStore = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\nimport { Tab, Tabs, withStyles } from '@material-ui/core';\n\nconst HEADER_TABS = ['info', 'tasks', 'webs', 'files']\n\nconst HeadTabs = withStyles({ indicator: { display: 'none' } })(Tabs)\nconst HeadTab = withStyles({ root: { minWidth: 0, color: 'grey' }, selected: { color: 'black'} })(Tab);\n\nclass ChatDetailsHeader extends React.Component {\n    render() {\n        const { chatId, t, backButton, onBackClick, onClose, onTabChange } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Person Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onBackClick}>\n                    <span className='header-status-content' style={{ overflow: 'visible' }}>\n                        <HeadTabs\n                            style={{ marginLeft: -12 }}\n                            value={ HEADER_TABS.findIndex(t => t === this.props.tab) }\n                            onChange={ (_, value) => onTabChange(HEADER_TABS[value]) }\n                        >\n                            <HeadTab label={info} className=\"chat-header-text\"/>\n                            { tasksStore && [\n                                <HeadTab key=\"tasks\" label=\"Tasks\"/>,\n                                <HeadTab key=\"webs\" label=\"Webs\" disabled/>,\n                                <HeadTab key=\"files\" label=\"Files\" disabled/>,\n                            ]}\n                        </HeadTabs>\n                    </span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div className='shared-media-tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            let { text, caption } = message.content;\n            text = text || caption;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(message) {\n        if (!message) return undefined;\n\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return undefined;\n            }\n            case 'messageVideo': {\n                return undefined;\n            }\n            case 'messageDocument': {\n                return 78;\n            }\n            case 'messageAudio': {\n                return 94;\n            }\n            case 'messageVoiceNote': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        } = this.state;\n\n        console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0;\n        if (!hasItems) {\n            return null;\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x)}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {Fab, List, ListItem, ListItemText} from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst fake = ['Отчёты', 'Баннеры', 'Техническиое', 'Юридическое'].map(title => ({id:title,title}))\n\nexport default function TasksList ({ onNewTaskToggle }) {\n  const [tasks, setTasks] = useState(fake)\n  return <div className=\"chat-tasks-list\">\n      <div className={classNames('chat', { 'chat-big': true })}>\n          <div className='chat-wrapper'>\n              <List className='chat-details-items'>\n                      {tasks.map(({id,title}) => (\n                          <ListItem key={id} divider className='list-item-rounded' alignItems='flex-start'>\n                              <ListItemText primary={title} style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                          </ListItem>\n                      ))}\n              </List>\n\n              <Fab className=\"chat-tasks-add\" aria-label=\"add\" color=\"primary\"\n                  onClick={onNewTaskToggle}\n              >\n                  <Add/>\n              </Fab>\n          </div>\n      </div>\n  </div>\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport TasksStore from '../../../Stores/TaskTrackerStore';\n\nimport { FormControl, IconButton, TextField, Box, Button, MenuItem, Chip, CircularProgress, Typography, Link } from \"@material-ui/core\";\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { add, formatISO, startOfDay } from 'date-fns'\nimport { startOfWeek } from 'date-fns/esm';\nimport { debounce } from '../../../Utils/Common';\n\nconst initialTask = {\n  name: '',\n  assignee: '',\n  due_on: null,\n  notes: '',\n}\nconst titles = {\n  name: 'Task name',\n  assignee: 'Assignee',\n  due_on: 'Deadline',\n  notes: 'Description',\n}\n\nexport default function NewTask ({ chatId, onClose }) {\n    const [{ projects, chats, users: _users, getTaskPlaces, getTasks }] = useState(TasksStore);\n    const projectId = chats && chatId && chats[chatId] && chats[chatId].tasksStore.projectId\n    const [submitStatus, setSubmitStatus] = useState(null);\n    const users = useMemo(() => [{id:'me', name: 'Me'}, ..._users], [_users]);\n    const [fields, setFields] = useState(() => getInitialFields(projectId))\n    const { t } = useTranslation();\n    const refs = useRef({})\n    const [taskPlaces, setTaskPlaces] = useState([])\n    const [tasks, setTasks] = useState([])\n    const superTask = useMemo(() => taskPlaces[0] && tasks.find(t => t.id === taskPlaces[0].superTaskId), [taskPlaces, tasks])\n    const persistFields = useCallback(debounce((_fields) => void setTimeout(() => {\n      const fields = { ..._fields, due_on: _fields.due_on && formatISO(_fields.due_on, { representation: 'date'})}\n      console.log('save fields', fields, 'to', projectId)\n      localStorage[`taskTrackerIncomplete_${projectId}`] = JSON.stringify(fields)\n    }),600), [])\n\n    useEffect(() => void (projectId && getTasks(projectId).then(setTasks)), [projectId]);\n    useEffect(() => void (projectId && getTaskPlaces(projectId).then(setTaskPlaces)), [projectId]);\n    useEffect(() => void persistFields(fields), [fields])\n\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return null\n\n    return <div className='chat-tasks-new-form'>\n        <div className='header-master'>\n            <IconButton className='header-left-button' onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow'>\n                <span className='header-status-content'>{t('New task')}</span>\n            </div>\n        </div>\n\n        <div className='chat-tasks-new-form-controls'>\n            <FormControl fullWidth variant='outlined'>\n                <Box p={2}>\n                  {taskPlaces&&taskPlaces.length <= 1\n                    ? <Typography variant='caption' style={{ color: 'grey'}}>\n                        {taskPlaces[0] && superTask\n                          ? <Link color=\"inherit\" underline=\"none\" href={`https://app.asana.com/0/${projectId}/${superTask.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {superTask.name} ❯\n                          </Link>\n                          : <i>Loading task place...</i>\n                        }\n                      </Typography>\n                    : (\n                      <span>((тут будет выбор одного концерта из нескольких доступных))</span>\n                      // <TextField select {...getFieldProps('superTask', {targetValue: true})} style={{ marginBottom: 8 }}>\n                      //   {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n                      // </TextField>\n                  )}\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('name')} autoFocus />\n                </Box>\n                <Box p={2}>\n                  <TextField select {...getFieldProps('assignee', {targetValue: true})} style={{ marginBottom: 8 }}>\n                    {users && users.map(user => <MenuItem key={user.id} value={user.id}>{ user.name }</MenuItem>)}\n                  </TextField>\n                  <Chip onClick={ () => setFields(fields => ({ ...fields, assignee: 'me' })) } label={t('Me')}/>\n                </Box>\n                <Box p={2}>\n                  <KeyboardDatePicker autoOk disablePast format=\"dd.MM.yyyy\"\n                    style={{ marginBottom: 8 }}\n                    {...getFieldProps('due_on', {targetValue: null})}\n                    variant=\"inline\"\n                  />\n\n                  <div style={{ display: 'flex' }}>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { days: 1 })) })) } label={t('Tomorrow')}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: startOfDay(add(new Date(), { weeks: 1 })) })) } label={t('In a Week')} style={{ marginLeft: 8 }}/>\n                    <Chip onClick={ () => setFields(fields => ({ ...fields, due_on: add(startOfWeek(new Date(), {weekStartsOn: 1}), { weeks: 1 }) })) } label={t('Monday')} style={{ marginLeft: 8 }}/>\n                  </div>\n                </Box>\n                <Box p={2}>\n                  <TextField {...getFieldProps('notes')} rows={16} multiline />\n                </Box>\n            </FormControl>\n\n            <Box p={2} style={{ display: 'flex', alignItems: 'center' }}>\n              <Button variant=\"contained\" color=\"primary\" onClick={submitStatus === 'loading' ? undefined : handleSubmit} style={{ color: 'white' }}>\n                {submitStatus === 'loading' ? <CircularProgress size={24} style={{ color: 'white' }} /> : t('Create')}\n              </Button>\n              { submitStatus instanceof Error && <div style={{ marginLeft: 16, color: 'red', fontWeight: 500 }}>{ submitStatus.toString() }</div> }\n            </Box>\n        </div>\n    </div>\n\n  /**\n   * @returns {import('@material-ui/core').OutlinedTextFieldProps}\n   */\n  function getFieldProps(field, {targetValue = false} = {}) {\n    return {\n      variant: 'outlined',\n      // @ts-ignore\n      inputVariant: 'outlined',\n      fullWidth: true,\n      value: fields[field],\n      label: t(titles[field]),\n      inputRef: (ref) => refs.current[field] = ref,\n      onChange:\n        (targetValue === true && ((e) => setFields(fields => ({...fields, [field]: e.target.value })))) ||\n        // Тут какой-то сломаный MUI, в котором не работает e.target.value... Пиздец блядь\n        (targetValue === false && (() => setFields(fields => ({...fields, [field]: refs.current[field] && refs.current[field].value })))) ||\n        ((value) => setFields(fields => ({...fields, [field]: value })))\n\n    }\n  }\n\n  async function handleSubmit () {\n    if (!chats || !chats[chatId] || !chats[chatId].tasksStore) return alert('Не подтянулась инфа из асаны')\n    const {projectId} = chats[chatId].tasksStore\n\n    const due_on = fields.due_on && formatISO(fields.due_on, { representation: 'date'});\n    try {\n      setSubmitStatus('loading')\n      await TasksStore.submitTask(projectId, {...fields, due_on, parent: superTask && superTask.id})\n      setFields(initialTask)\n      setSubmitStatus(null)\n    } catch(e) {\n      setSubmitStatus(e)\n    }\n    // todo: close\n  }\n}\n\nfunction getInitialFields(projectId) {\n  if (localStorage[`taskTrackerIncomplete_${projectId}`]) {\n    const res = JSON.parse(localStorage[`taskTrackerIncomplete_${projectId}`])\n    return {...res, due_on: res.due_on && new Date(res.due_on)}\n  } else {\n    return initialTask\n  }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport {duration, Typography, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TasksStore from '../../Stores/TaskTrackerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport { CSSTransition } from 'react-transition-group';\nimport TasksList from './TasksAsana/List';\nimport NewTask from './TasksAsana/NewTask';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n        const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            headerTab: tasksStore ? 'tasks' : 'info',\n            newTaskFormOpen: false,\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n\n        if (!list) return {}\n\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     const { chatId, theme, counters, migratedCounters } = this.props;\n\n    //     if (nextProps.chatId !== chatId) return true;\n    //     if (nextProps.counters !== counters) return true;\n    //     if (nextProps.migratedCounters !== migratedCounters) return true;\n    //     if (nextProps.theme !== theme) return true;\n    //     if (nextState.headerTab !== this.state.headerTab) return true\n    //     if (nextState.newTaskFormOpen !== this.state.newTaskFormOpen) return true\n\n    //     return false;\n    // }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) this.loadContent();\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (list) list.scrollTop = prevProps.chatId === chatId ? scrollTop : 0;\n\n        if (prevProps.chatId !== this.props.chatId) {\n            const { chatId } = this.props;\n            const tasksStore = chatId && TasksStore.chats && TasksStore.chats[chatId] && TasksStore.chats[chatId].tasksStore\n            this.setState({headerTab: tasksStore ? 'tasks' : 'info'});\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        if (!this.listRef.current) return;\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef.current) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef.current) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })}/>\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = this.renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup);\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n\n    renderContent(chatId, backButton, onClose, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return (\n            <>\n                <CSSTransition\n                    timeout={{ enter: duration.enteringScreen, exit: duration.leavingScreen }}\n                    in={this.state.newTaskFormOpen}\n                    mountOnEnter={true}\n                    unmountOnExit={true}>\n                        <div>\n                            {this.state.newTaskFormOpen && <NewTask chatId={ chatId } onClose={()=>this.setState({newTaskFormOpen: false})} /> }\n                        </div>\n                </CSSTransition>\n\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onBackClick={this.handleHeaderClick}\n                    tab={this.state.headerTab} onTabChange={(tab) => this.setState({ headerTab: tab })} />\n                {this.state.headerTab === 'info' && this.renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup)}\n                {this.state.headerTab === 'tasks' && <TasksList onNewTaskToggle={() => this.setState(({newTaskFormOpen}) => ({ newTaskFormOpen: !newTaskFormOpen}))} />}\n            </>\n        );\n    }\n\n    renderInfo(chatId, popup, photo, isMe, bio, t, username, phoneNumber, isGroup) {\n        return <div\n            ref={this.listRef}\n            className={classNames('chat-details-list', 'scrollbars-hidden')}\n            onScroll={this.handleScroll}>\n            <div className='chat-details-info'>\n                <Chat\n                    chatId={chatId}\n                    big={true}\n                    showStatus={true}\n                    showSavedMessages={!popup}\n                    onTileSelect={photo ? this.handleOpenViewer : null} />\n                {!isMe && (\n                    <List className='chat-details-items'>\n                        {bio && (\n                            <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                <ListItemIcon>\n                                    <ErrorOutlineIcon className='chat-details-info-icon' />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={bio}\n                                    secondary={t('Bio')}\n                                    style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }} />\n                            </ListItem>\n                        )}\n                        {username && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                <ListItemIcon>\n                                    <AlternateEmailIcon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={<Typography variant='inherit' noWrap>\n                                        {username}\n                                    </Typography>}\n                                    secondary={t('Username')} />\n                            </ListItem>\n                        )}\n                        {phoneNumber && (\n                            <>\n                                <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                    <ListItemIcon>\n                                        <CallIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={<Typography variant='inherit' noWrap>\n                                            {formatPhoneNumber(phoneNumber)}\n                                        </Typography>}\n                                        secondary={t('Phone')} />\n                                </ListItem>\n                            </>\n                        )}\n                        <NotificationsListItem chatId={chatId} />\n                        {popup && !isGroup && (\n                            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    primary={<Typography color='primary' variant='inherit' noWrap>\n                                        {t('SendMessage').toUpperCase()}\n                                    </Typography>}\n                                    style={{ paddingLeft: 40 }} />\n                            </ListItem>\n                        )}\n                    </List>\n                )}\n            </div>\n\n            <div ref={this.dividerRef} />\n            <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\n            <SharedMediaContent ref={this.mediaRef} chatId={chatId} />\n        </div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n        const chatId_ = popup ? dialogChatId : chatId;\n\n        this.state = {\n            chatId: chatId_,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n        props.onChangeChatId(chatId_) // TODO: перенести этот стейт выше\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n        this.props.onChangeChatId(update.nextChatId)\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n            this.props.onChangeChatId(0)\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        if (!chatId) return null;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n        setTimeout(() => {\n            this.state.filters && this.state.filters[0] && this.state.filters[0].id && this.handleFilterClick(null, this.state.filters[0].id); // Select first folder\n        }, 300)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                    </div>))}\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport TaskTrackerIcon from '@material-ui/icons/Assignment';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onTaskTracker,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onTaskTracker}>\n                        <ListItemIcon>\n                            <TaskTrackerIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('TaskTracker')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n * TaskTracker extension settings panel\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './TaskTracker.css';\nimport { TextField, Link, Box, Typography, ListItem, List } from '@material-ui/core';\nimport ChatStore from '../../Stores/ChatStore';\nimport TaskTrackerStore, { normMapping } from '../../Stores/TaskTrackerStore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst placeScriptGuideText = `\n// Task Place Compute Script\n// Examples. Choose one and customize it!\n\n// find single Placeholder task by name\n({tasks}) => {\n  const superTaskId = tasks.find(t => t.name === 'Placeholder task').gid\n  return [{superTaskId, sectionId: null}]\n}\n\n// find single Section\n({sections}) => {\n  const sectionId = tasks.find(t => t.name === 'Hot tasks section').gid\n  return [{superTaskId: null, sectionId}]\n}\n\n// static task or section id\n[{sectionId: '4646463535'}]\n\n// several place options\n[{superTaskId: '4646463535'}, {superTaskId: '6646463599'}]\n`;\n\nexport default function TaskTracker ({ onClose }) {\n    const [initialSettings] = useState(() => localStorage.taskTrackerSettings && JSON.parse(localStorage.taskTrackerSettings))\n    const {t} = useTranslation();\n    const patRef = useRef();\n    const mappingRef = useRef();\n    const placeScriptRef = useRef();\n    const [mappingText, setMapping] = useState(initialSettings && initialSettings.mappingText || '');\n    const [pat, setPat] = useState(initialSettings && initialSettings.pat || '');\n    const [placeScript, setPlaceScript] = useState(initialSettings && initialSettings.placeScript || placeScriptGuideText);\n    const settings = useMemo(() => ({ pat, mappingText, placeScript }), [pat, mappingText, placeScript]);\n    useEffect(() => void (localStorage.taskTrackerSettings = JSON.stringify(settings)), [settings])\n\n    return (\n        <>\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>{t('Task Tracker')} (Asana)</span>\n                </div>\n            </div>\n            <div className='sidebar-page-content' style={{ display: 'flex', flexDirection: 'column' }}>\n                <Box p={2}>\n                    <TextField label=\"Asana Token (PAT)\" variant=\"outlined\" placeholder=\"X/XXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                        helperText={<Link href=\"https://app.asana.com/-/developer_console\" target=\"_blank\" rel=\"noopener\">Obtain PAT</Link>}\n                        fullWidth\n                        inputRef={patRef}\n                        value={pat}\n                        onChange={ () => patRef.current && setPat(patRef.current.value) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <div style={{ display: 'flex' }}>\n                        <Autocomplete options={[...ChatStore.items.entries()].map(([_, item]) => item).filter(item => !mappingText.includes(item.id))}\n                            getOptionLabel={item => item.title}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Chat')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text}\\n${value.id}(${value.title}) `))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%'}}\n                        />\n                        <Autocomplete options={[...TaskTrackerStore.projects.entries()].map(([_, item]) => item)}\n                            getOptionLabel={item => item.name}\n                            renderInput={(params) => <TextField {...params} label={t('Pick Project')} variant=\"outlined\" />}\n                            onChange={(_, value) => setMapping(text => normMapping(`${text} ${value.id}(${value.name})\\n`))}\n                            getOptionSelected={(item, value) => item.id === value}\n                            value={null}\n                            style={{ flexBasis: '50%', marginLeft: 16 }}\n                        />\n                    </div>\n\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label=\"Mapping: Chat id <-> Project id\"\n                        placeholder={`chat_id project_id\\nchat_id project_id\\nchat_id project_id`}\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap', fontSize: 12, lineHeight: 2 }}}\n                        inputRef={mappingRef}\n                        value={mappingText}\n                        onChange={ () => mappingRef.current && setMapping(normMapping(mappingRef.current.value)) }\n                    />\n                </Box>\n                <Box p={2}>\n                    <TextField variant=\"outlined\" multiline rows={ 16 } fullWidth\n                        label=\"Task Place Compute Script\"\n                        style={{marginTop: 16 }}\n                        inputProps={{style:{ whiteSpace: 'nowrap' }}}\n                        inputRef={placeScriptRef}\n                        value={placeScript}\n                        onChange={ () => placeScriptRef.current && setPlaceScript(normMapping(placeScriptRef.current.value)) }\n                    />\n                </Box>\n            </div>\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport TaskTracker from '../TaskTracker';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false,\n            openTasktracker: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => this.setState({ openEditProfile: true });\n    closeEditProfile = () => this.setState({ openEditProfile: false });\n    openGeneral = () => this.setState({ openGeneral: true });\n    closeGeneral = () => this.setState({ openGeneral: false });\n    openNotifications = () => this.setState({ openNotifications: true });\n    closeNotifications = () => this.setState({ openNotifications: false });\n    openPrivacySecurity = () => this.setState({ openPrivacySecurity: true });\n    closePrivacySecurity = () => this.setState({ openPrivacySecurity: false });\n    openLanguage = () => this.setState({ openLanguage: true });\n    closeLanguage = () => this.setState({ openLanguage: false });\n    openFilters = () => this.setState({ openFilters: true })\n    closeFilters = () => this.setState({ openFilters: false });\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                    onTaskTracker={() => this.setState({ openTasktracker: true })}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n                <SidebarPage open={this.state.openTasktracker} onClose={() => this.setState({ openTasktracker: false })}>\n                    <TaskTracker />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator, isMeChat, isPrivateChat, isSupergroup } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return <LeaveChatDialog chatId={chatId} onClose={this.handleLeaveContinue} />\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return <ClearHistoryDialog chatId={chatId} onClose={this.handleClearHistoryContinue} />;\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n        const isRightPanelOpen = Boolean(ChatStore.get(this.state.chatId))\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isRightPanelOpen\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    <ChatInfo onChangeChatId={(chatId) => this.setState({ chatId })} />\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}